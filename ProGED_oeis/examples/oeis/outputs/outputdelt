




 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 20
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_1, p = 0.00034094695150695456, parse trees = 1, valid = False
-> C0*n + an_1*an_4, p = 6.308755710830424e-06, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_2*n**2, p = 1.0463158905262614e-06, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*n**3 + n, p = 0.0008640000000000007, parse trees = 1, valid = False
-> an_1*an_3, p = 0.0013625369524321422, parse trees = 1, valid = False

Total time consumed by now:0.0909907960012788


Equation discovery for all (chosen) OEIS sequences took 0.09099612800127943 secconds, i.e. 0.001516602133354657 minutes or 2.527670222257762e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 21
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*an_2 + C1*n + an_1*an_2*n**2, p = 6.319628740500497e-08, parse trees = 1, valid = False
-> C0*an_1**3*n + an_1, p = 2.8872396035748254e-05, parse trees = 1, valid = False
-> C0*an_2 + an_1**2, p = 0.00034094695150695456, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1**3*an_3 + an_1*an_2*n, p = 1.3200408007027546e-08, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False

Total time consumed by now:0.10649871999885363


Equation discovery for all (chosen) OEIS sequences took 0.10650513099972159 secconds, i.e. 0.0017750855166620263 minutes or 2.9584758611033773e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 22
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.02419200000000001, parse trees = 2, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + an_1**2*n, p = 0.00022579694335649264, parse trees = 1, valid = False
-> C0*an_1*an_2 + n, p = 0.0005332760010749802, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False

Total time consumed by now:0.08389223300036974


Equation discovery for all (chosen) OEIS sequences took 0.08389745999920706 secconds, i.e. 0.0013982909999867843 minutes or 2.330484999977974e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 23
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n**2, p = 0.004320000000000003, parse trees = 1, valid = False
-> an_1*an_3*n**2, p = 5.450147809728571e-05, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> C0*n + an_1**2, p = 0.0002119017468422469, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> an_2*n**2, p = 0.0013901639344262304, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False

Total time consumed by now:0.08364598300067883


Equation discovery for all (chosen) OEIS sequences took 0.08365085600053135 secconds, i.e. 0.0013941809333421892 minutes or 2.3236348889036486e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 24
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_1**4*an_2*n, p = 2.2298535371871152e-07, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_3 + n, p = 0.001278688524590164, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False

Total time consumed by now:0.07997951700053818


Equation discovery for all (chosen) OEIS sequences took 0.0799849480008561 secconds, i.e. 0.001333082466680935 minutes or 2.2218041111348913e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 25
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 5 models
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.06809810100094182


Equation discovery for all (chosen) OEIS sequences took 0.068102971999906 secconds, i.e. 0.0011350495333317667 minutes or 1.8917492222196113e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 26
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*n + an_2, p = 0.0005332760010749803, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_45 + n, p = 3.934426229508197e-05, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1*an_4 + C1*n + n, p = 6.308755710830425e-06, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_4*n, p = 6.7224446099012716e-06, parse trees = 1, valid = False

Total time consumed by now:0.08225541399951908


Equation discovery for all (chosen) OEIS sequences took 0.08226074499907554 secconds, i.e. 0.001371012416651259 minutes or 2.285020694418765e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 27
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 5 models
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_2 + an_1*an_2, p = 0.00010296403663742789, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2 + an_1*n**3, p = 1.6365453672333833e-06, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_1*an_2*n, p = 0.00010665520021499605, parse trees = 1, valid = False

Total time consumed by now:0.07952816000033636


Equation discovery for all (chosen) OEIS sequences took 0.07953318199906789 secconds, i.e. 0.001325553033317798 minutes or 2.2092550555296636e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 28
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1*an_2*n, p = 0.0008887933351249672, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_1*an_2*n**2, p = 0.00017775866702499343, parse trees = 1, valid = False
-> an_1*an_4*n, p = 8.7621607094867e-05, parse trees = 1, valid = False
-> C0*an_37*n + an_1**2, p = 6.432961349187821e-07, parse trees = 1, valid = False
-> C0*an_3*n + n, p = 0.0002557377049180329, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.08176043000094069


Equation discovery for all (chosen) OEIS sequences took 0.08176546899994719 secconds, i.e. 0.0013627578166657865 minutes or 2.271263027776311e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 29
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 6 models
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_1, p = 0.00034094695150695456, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.06927288900078565


Equation discovery for all (chosen) OEIS sequences took 0.06927776200063818 secconds, i.e. 0.001154629366677303 minutes or 1.924382277795505e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 30
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*n**2 + n**2, p = 0.0008640000000000007, parse trees = 1, valid = False
-> an_1*an_3*n, p = 0.00027250739048642847, parse trees = 1, valid = False
-> C0*an_1*an_2*n**2 + an_1*n, p = 2.727575612055639e-06, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False

Total time consumed by now:0.08360978000018804


Equation discovery for all (chosen) OEIS sequences took 0.08361527099987143 secconds, i.e. 0.0013935878499978572 minutes or 2.322646416663095e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 31
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1 + n**2, p = 0.0027619672131147556, parse trees = 1, valid = False
-> C0*n**3 + n**2, p = 0.0001728000000000002, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_2, p = 0.00034094695150695456, parse trees = 1, valid = False
-> an_1**3, p = 0.0018816411946374378, parse trees = 1, valid = False
-> C0*an_1**3*n + C1*n + an_2, p = 1.2555790686315142e-07, parse trees = 1, valid = False

Total time consumed by now:0.09079632699831564


Equation discovery for all (chosen) OEIS sequences took 0.09080137399905652 secconds, i.e. 0.0015133562333176087 minutes or 2.522260388862681e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 32
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_5, p = 0.0012573770491803276, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*n + an_1, p = 4.091363418083456e-05, parse trees = 1, valid = False
-> C0*an_1**3*n**2 + n, p = 9.031877734259707e-06, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> C0*an_1**2 + C1*n**3 + an_1, p = 5.419126640555824e-06, parse trees = 1, valid = False
-> C0*an_1**2*an_5*n + an_1, p = 3.154576603905825e-07, parse trees = 1, valid = False

Total time consumed by now:0.10414751700045599


Equation discovery for all (chosen) OEIS sequences took 0.10415346099944145 secconds, i.e. 0.0017358910166573574 minutes or 2.893151694428929e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 33
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n + n**2, p = 0.004320000000000003, parse trees = 1, valid = False
-> C0*an_1**2*an_17*n + C1*n**2 + C2*n + n, p = 4.446469583756282e-11, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1**2*n, p = 0.0029430798172534293, parse trees = 1, valid = False
-> C0*an_1*an_2**2*n**2 + C1*an_19 + n, p = 1.8004642727704491e-10, parse trees = 1, valid = False
-> C0*an_2 + an_1, p = 0.0026663800053749005, parse trees = 1, valid = False
-> C0*an_1*an_10*an_2 + an_1, p = 1.2506220477349128e-07, parse trees = 1, valid = False
-> C0*an_14 + n, p = 3.934645775626231e-05, parse trees = 1, valid = False
-> C0*an_1 + an_1, p = 5.1970312864346815e-05, parse trees = 1, valid = False

Total time consumed by now:0.10644132399829687


Equation discovery for all (chosen) OEIS sequences took 0.1064468639997358 secconds, i.e. 0.0017741143999955966 minutes or 2.9568573333259942e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 34
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_2**2*an_3 + n, p = 1.9067414192116277e-06, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.0003314360655737708, parse trees = 1, valid = False
-> C0*an_4*n + an_1*n, p = 1.0514592851384044e-05, parse trees = 1, valid = False
-> an_2*an_3, p = 0.0004114783958911882, parse trees = 1, valid = False

Total time consumed by now:0.08398163300080341


Equation discovery for all (chosen) OEIS sequences took 0.08398695299911196 secconds, i.e. 0.0013997825499851993 minutes or 2.332970916641999e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 35
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_37*n, p = 6.55737704918033e-05, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_2 + n, p = 9.662778822897076e-05, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False
-> C0*an_39*n + an_1, p = 5.030905670518681e-06, parse trees = 1, valid = False
-> C0*n**2 + n, p = 0.004320000000000003, parse trees = 1, valid = False

Total time consumed by now:0.0844072319996485


Equation discovery for all (chosen) OEIS sequences took 0.08441271500123548 secconds, i.e. 0.0014068785833539247 minutes or 2.3447976389232077e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 36
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_2*an_4*n, p = 2.6461226074233342e-05, parse trees = 1, valid = False
-> an_1*n**4, p = 0.00018413114754098385, parse trees = 1, valid = False
-> an_1**2*n**3, p = 0.00011772319269013723, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_1*n + n, p = 2.7095633202779117e-05, parse trees = 1, valid = False
-> C0*an_2 + C1*n + an_1, p = 3.8395872077398584e-05, parse trees = 1, valid = False
-> an_2*an_42, p = 1.2660873719728871e-05, parse trees = 1, valid = False
-> C0*an_2 + C1*n + an_4*n, p = 1.9052082773448003e-06, parse trees = 1, valid = False
-> C0*an_1**2 + n**2, p = 0.00035316957807041144, parse trees = 1, valid = False

Total time consumed by now:0.10138569000082498


Equation discovery for all (chosen) OEIS sequences took 0.10139076100131206 secconds, i.e. 0.0016898460166885343 minutes or 2.816410027814224e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 37
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*an_9 + an_1, p = 2.5732164364418167e-05, parse trees = 1, valid = False
-> C0*an_17*n**3 + an_3, p = 1.863301203799418e-08, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False
-> C0*an_22 + an_3, p = 2.3291230041377067e-06, parse trees = 1, valid = False
-> C0*n**2 + an_1, p = 0.0027619672131147556, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_16, p = 0.0003278704990549016, parse trees = 1, valid = False

Total time consumed by now:0.08665221800038125


Equation discovery for all (chosen) OEIS sequences took 0.08665765099976852 secconds, i.e. 0.0014442941833294753 minutes or 2.4071569722157923e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 38
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 6 models
-> C0*an_1**3*an_2*n**2 + an_1, p = 2.2298535371871152e-07, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_22, p = 0.0003278688536593848, parse trees = 1, valid = False
-> C0*n**3 + an_1**2*n, p = 1.4126783122816472e-05, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.08363469699907


Equation discovery for all (chosen) OEIS sequences took 0.08363995699983207 secconds, i.e. 0.0013939992833305345 minutes or 2.3233321388842242e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 39
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 6 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> an_4, p = 0.0034262295081967206, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*n + an_1*an_2, p = 0.0005332760010749802, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.06710219200067513


Equation discovery for all (chosen) OEIS sequences took 0.06710718599970278 secconds, i.e. 0.0011184530999950463 minutes or 1.864088499991744e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 40
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_1*an_5, p = 0.00016077936038699274, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_3*n + n**2, p = 5.114754098360659e-05, parse trees = 1, valid = False
-> an_4, p = 0.0034262295081967206, parse trees = 1, valid = False

Total time consumed by now:0.07040285299990501


Equation discovery for all (chosen) OEIS sequences took 0.0704081550011324 secconds, i.e. 0.0011734692500188733 minutes or 1.9557820833647888e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 41
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1*n**2 + C1*n + an_1*n, p = 8.47606987368988e-06, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*an_2*an_49*n + n, p = 3.885435344808601e-08, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*an_2 + n, p = 1.235568439649135e-05, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*an_2 + an_2, p = 4.942273758596542e-07, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_2 + n, p = 4.0913634180834555e-05, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> C0*n**2 + C1*n + an_1**3*n**2, p = 2.6011807874667982e-08, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False

Total time consumed by now:0.10988823899970157


Equation discovery for all (chosen) OEIS sequences took 0.1098931390006328 secconds, i.e. 0.0018315523166772133 minutes or 3.052587194462022e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 42
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1**2 + n, p = 0.001765847890352057, parse trees = 1, valid = False
-> an_1*n**4, p = 0.00018413114754098385, parse trees = 1, valid = False
-> C0*an_1*an_12*n + an_1*n, p = 1.287389975700452e-07, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> C0*an_1 + an_1, p = 0.008829239451760283, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_1*n**3 + C2*an_1 + C3*n + an_1*n, p = 9.788977848793952e-11, parse trees = 1, valid = False
-> C0*an_1**3*an_2 + C1*an_1 + an_2, p = 1.291609152687618e-07, parse trees = 1, valid = False

Total time consumed by now:0.10251870700085419


Equation discovery for all (chosen) OEIS sequences took 0.10252682999998797 secconds, i.e. 0.0017087804999997994 minutes or 2.847967499999666e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 43
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*n**2 + an_1**2*n, p = 7.063391561408233e-05, parse trees = 1, valid = False
-> C0*n + an_18*an_2, p = 1.519305533078929e-06, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_26*n, p = 6.432961349378593e-07, parse trees = 1, valid = False
-> C0*n**2 + an_1, p = 0.0027619672131147556, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_12*an_48, p = 1.195162608020544e-07, parse trees = 1, valid = False
-> C0*an_4 + an_1*n, p = 5.2572964256920205e-05, parse trees = 1, valid = False

Total time consumed by now:0.09629447500083188


Equation discovery for all (chosen) OEIS sequences took 0.09629959300036717 secconds, i.e. 0.0016049932166727861 minutes or 2.6749886944546434e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 44
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.015467016393442628, parse trees = 2, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*n + an_1, p = 4.0913634180834555e-05, parse trees = 1, valid = False
-> C0*an_1*n**2 + n, p = 0.0005523934426229513, parse trees = 1, valid = False
-> C0*an_1 + an_1*n, p = 0.001765847890352057, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*n + an_1**2*n**2, p = 7.063391561408233e-05, parse trees = 1, valid = False

Total time consumed by now:0.08995215799950529


Equation discovery for all (chosen) OEIS sequences took 0.08995722300096531 secconds, i.e. 0.0014992870500160885 minutes or 2.4988117500268144e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 45
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*n + an_39, p = 3.934426229508197e-05, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1 + n**2, p = 0.0027619672131147556, parse trees = 1, valid = False
-> C0*an_1*n**2 + n, p = 0.0005523934426229513, parse trees = 1, valid = False
-> C0*an_1**2*an_2*an_36 + C1*an_3 + n, p = 1.7646830778625469e-10, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False

Total time consumed by now:0.09436202500000945


Equation discovery for all (chosen) OEIS sequences took 0.09436757799994666 secconds, i.e. 0.0015727929666657777 minutes or 2.6213216111096295e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 46
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> C0*an_1 + an_1, p = 0.008829239451760283, parse trees = 1, valid = False
-> C0*an_1*an_2*n + C1*n**4 + n, p = 1.0238899220639635e-07, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*n**4, p = 0.00018413114754098385, parse trees = 1, valid = False
-> C0*n + an_2*n, p = 0.0008340983606557383, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*n**3 + an_1, p = 0.0005523934426229513, parse trees = 1, valid = False

Total time consumed by now:0.09080142899983912


Equation discovery for all (chosen) OEIS sequences took 0.09080637599981856 secconds, i.e. 0.001513439599996976 minutes or 2.5223993333282933e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 47
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*n + an_1**2, p = 0.001765847890352057, parse trees = 1, valid = False
-> C0*an_2*n + C1*an_3 + C2*n**2 + n**2, p = 2.8441386723998964e-08, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1*n + C2*n + an_1*n, p = 9.978300069954606e-09, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_31*n**2 + an_4*n, p = 5.877547199914108e-11, parse trees = 1, valid = False

Total time consumed by now:0.09973971599902143


Equation discovery for all (chosen) OEIS sequences took 0.09974572799910675 secconds, i.e. 0.0016624287999851125 minutes or 2.770714666641854e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 48
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n + an_2*n, p = 0.0008340983606557383, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_3 + C2*n + an_1, p = 2.3097916828598608e-08, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1*an_3 + C2*n**2 + an_1, p = 6.021251822839804e-08, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*an_1 + C2*n + an_1*n, p = 1.3005903937333988e-07, parse trees = 1, valid = False
-> n**4, p = 0.0014400000000000016, parse trees = 1, valid = False
-> an_1**2*an_3*an_43*n, p = 1.269406459311501e-08, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.10406620899993868


Equation discovery for all (chosen) OEIS sequences took 0.10407189999932598 secconds, i.e. 0.001734531666655433 minutes or 2.8908861110923884e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 49
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1*an_2 + C1*an_1 + an_1, p = 2.615789726315652e-05, parse trees = 1, valid = False
-> an_1**2*an_3, p = 0.00017422603654050346, parse trees = 1, valid = False
-> C0*n + an_1*an_2**2*an_3*an_39, p = 8.882070572337603e-11, parse trees = 1, valid = False
-> C0*an_1*n + an_1*an_2, p = 6.818939030139093e-05, parse trees = 1, valid = False
-> C0*an_1 + C1*n + an_3*n, p = 1.9620532115022853e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + an_1, p = 0.008829239451760283, parse trees = 1, valid = False
-> C0*an_1 + C1*an_3 + n, p = 9.810266057511425e-05, parse trees = 1, valid = False
-> C0*an_3 + C1*n**2 + C2*n + an_1*an_2*n, p = 1.8183837413704256e-08, parse trees = 1, valid = False
-> C0*n + an_2, p = 0.00417049180327869, parse trees = 1, valid = False

Total time consumed by now:0.10774999800014484


Equation discovery for all (chosen) OEIS sequences took 0.1077552780006954 secconds, i.e. 0.00179592130001159 minutes or 2.9932021666859832e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 50
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1**2*n**2, p = 0.000588615963450686, parse trees = 1, valid = False
-> C0*an_3 + C1*n + n, p = 1.841311475409837e-05, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*n**3 + n**2, p = 0.0001728000000000002, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*an_3, p = 0.0013625369524321422, parse trees = 1, valid = False
-> an_2**2*n**2, p = 5.368210457165044e-05, parse trees = 1, valid = False

Total time consumed by now:0.08730370900048001


Equation discovery for all (chosen) OEIS sequences took 0.08730929000012111 secconds, i.e. 0.0014551548333353518 minutes or 2.4252580555589196e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 51
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_4*n, p = 0.0006852459016393444, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + n**3, p = 8.47606987368988e-06, parse trees = 1, valid = False
-> an_1*an_2*n, p = 0.000888793335124967, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> C0*an_1*n**2 + an_1*n**2, p = 1.4126783122816469e-05, parse trees = 1, valid = False
-> C0*an_2 + C1*n + an_1**4*an_2*n**2, p = 1.0332873221500954e-09, parse trees = 1, valid = False
-> an_1**2*n, p = 0.0029430798172534293, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> C0*an_1*an_2*n + n, p = 0.00010665520021499607, parse trees = 1, valid = False

Total time consumed by now:0.09966531800091616


Equation discovery for all (chosen) OEIS sequences took 0.09967044200129749 secconds, i.e. 0.0016611740333549582 minutes or 2.7686233889249303e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 52
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 6 models
-> an_1*n, p = 0.046032786885245924, parse trees = 2, valid = False
-> C0*n + an_1, p = 0.015467016393442628, parse trees = 2, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**2*n, p = 0.002943079817253429, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.07613965299970005


Equation discovery for all (chosen) OEIS sequences took 0.07614468799874885 secconds, i.e. 0.001269078133312481 minutes or 2.115130222187468e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 53
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**3*an_2*n**2, p = 2.906433029239615e-06, parse trees = 1, valid = False
-> an_2**2*n, p = 0.00026841052285825215, parse trees = 1, valid = False
-> an_17, p = 0.0003278693464377819, parse trees = 1, valid = False
-> an_1**2*n, p = 0.0029430798172534293, parse trees = 1, valid = False
-> C0*n + an_1*n**2, p = 0.0005523934426229514, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> C0*an_1 + an_1**2*an_2, p = 4.35964954385942e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.0870718569985911


Equation discovery for all (chosen) OEIS sequences took 0.08707732599941664 secconds, i.e. 0.001451288766656944 minutes or 2.4188146110949067e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 54
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_15*n, p = 6.557486822239345e-05, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_46*n**2 + an_1, p = 1.006181134103736e-06, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> C0*n**2 + n, p = 0.004320000000000003, parse trees = 1, valid = False
-> C0*an_1*n + an_2, p = 0.0005332760010749803, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> an_1**2*n**2, p = 0.0005886159634506859, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.08671513599983882


Equation discovery for all (chosen) OEIS sequences took 0.08672102600030485 secconds, i.e. 0.0014453504333384142 minutes or 2.408917388897357e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 55
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*n + an_2*n, p = 0.00010665520021499607, parse trees = 1, valid = False
-> an_34, p = 0.000327868852459017, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1 + C1*n + an_1*n, p = 1.625737992166747e-05, parse trees = 1, valid = False
-> C0*an_1**2*an_3*n**3 + C1*n + an_1*an_2, p = 5.946276099165643e-11, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False

Total time consumed by now:0.09430743800112396


Equation discovery for all (chosen) OEIS sequences took 0.09431301000040548 secconds, i.e. 0.001571883500006758 minutes or 2.619805833344597e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 56
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1**2*n + an_2, p = 6.818939030139095e-05, parse trees = 1, valid = False
-> C0*an_1**2*an_39 + an_1, p = 4.112876928169263e-07, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> C0*an_1**2*n**2 + n, p = 7.063391561408233e-05, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n, p = 0.0016571803278688534, parse trees = 1, valid = False

Total time consumed by now:0.08860432900110027


Equation discovery for all (chosen) OEIS sequences took 0.08860949200061441 secconds, i.e. 0.0014768248666769067 minutes or 2.461374777794845e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 57
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> C0*an_1*n + C1*an_1 + an_1, p = 0.00013547816601389558, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1 + C1*n + an_1, p = 0.001059508734211234, parse trees = 1, valid = False
-> C0*n**2 + an_1**2, p = 0.0003531695780704115, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False

Total time consumed by now:0.08007039200128929


Equation discovery for all (chosen) OEIS sequences took 0.08007527100016887 secconds, i.e. 0.0013345878500028144 minutes or 2.2243130833380242e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 58
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_15 + n**2, p = 7.868984186687217e-06, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*an_1*n**2 + n**2, p = 6.780855898951909e-08, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2*n + an_2, p = 4.909636101700149e-06, parse trees = 1, valid = False
-> C0*an_14 + n, p = 3.934645775626231e-05, parse trees = 1, valid = False
-> C0*an_2*n**2 + n**2, p = 3.336393442622954e-05, parse trees = 1, valid = False

Total time consumed by now:0.09767983999881835


Equation discovery for all (chosen) OEIS sequences took 0.09768504299972847 secconds, i.e. 0.0016280840499954745 minutes or 2.713473416659124e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 59
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1*an_8 + C1*an_1*n + C2*an_1 + n**2, p = 1.2751767626791627e-09, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*an_2 + C1*n**2 + C2*n + an_1*n, p = 3.55843710618951e-08, parse trees = 1, valid = False
-> C0*an_1*an_2*an_42*n + n, p = 3.8854353448086e-08, parse trees = 1, valid = False

Total time consumed by now:0.08893734000048426


Equation discovery for all (chosen) OEIS sequences took 0.08894253200014646 secconds, i.e. 0.0014823755333357744 minutes or 2.470625888892957e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 60
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_1 + C1*an_2*n + C2*an_6 + an_1*an_2*an_41*n**3, p = 1.8624181845654677e-15, parse trees = 1, valid = False
-> C0*n + an_1**3*n, p = 4.515938867129854e-05, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_3*n + C1*n + an_1, p = 1.9620532115022853e-05, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False

Total time consumed by now:0.0958028490003926


Equation discovery for all (chosen) OEIS sequences took 0.09580812000058359 secconds, i.e. 0.0015968020000097264 minutes or 2.6613366666828773e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 61
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n, p = 0.00019886163934426245, parse trees = 1, valid = False
-> C0*an_1**2*an_3*n + an_1*an_2, p = 1.0323396005495902e-07, parse trees = 1, valid = False
-> C0*an_1**3*n**2 + C1*an_1*an_2*n + C2*n**2 + an_1*n, p = 1.642341962602342e-11, parse trees = 1, valid = False
-> C0*n + an_2*n, p = 0.0008340983606557383, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_2, p = 0.00010296403663742789, parse trees = 1, valid = False
-> C0*n + n, p = 0.0025920000000000014, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> an_1*an_17, p = 4.192427708548688e-05, parse trees = 1, valid = False

Total time consumed by now:0.10365608999927645


Equation discovery for all (chosen) OEIS sequences took 0.10366150799927709 secconds, i.e. 0.0017276917999879515 minutes or 2.8794863333132525e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 62
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_2*n**2, p = 0.0013901639344262304, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n**2, p = 0.00033143606557377075, parse trees = 1, valid = False
-> C0*an_1*n + an_2, p = 0.0005332760010749803, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n, p = 0.0016571803278688534, parse trees = 1, valid = False
-> C0*an_1 + C1*an_49*n + an_1*an_2, p = 1.4904784765331353e-08, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False

Total time consumed by now:0.09620183700099005


Equation discovery for all (chosen) OEIS sequences took 0.09620774799986975 secconds, i.e. 0.0016034624666644958 minutes or 2.6724374444408263e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 63
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*n + an_1**2*an_2, p = 6.818939030139093e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_12, p = 0.0003280721359016393, parse trees = 1, valid = False
-> C0*n + n, p = 0.0025920000000000014, parse trees = 1, valid = False
-> C0*an_1 + an_1**2, p = 0.0011289847167824626, parse trees = 1, valid = False
-> an_2*an_4, p = 0.00013230613037116667, parse trees = 1, valid = False
-> C0*an_1*n + an_1, p = 0.0017658478903520573, parse trees = 1, valid = False

Total time consumed by now:0.08175012199899356


Equation discovery for all (chosen) OEIS sequences took 0.08175525299884612 secconds, i.e. 0.0013625875499807686 minutes or 2.2709792499679476e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 64
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1**2*n + n, p = 0.0003531695780704116, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*an_1 + C2*an_2*n + C3*n + n**2, p = 9.426501315264295e-10, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*n + an_1*an_2*n, p = 0.0001066552002149961, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> C0*n + an_1*an_15*n, p = 1.006197977969841e-06, parse trees = 1, valid = False

Total time consumed by now:0.10630265700092423


Equation discovery for all (chosen) OEIS sequences took 0.10630981200120004 secconds, i.e. 0.0017718302000200006 minutes or 2.9530503333666677e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 65
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1*n**2 + C1*an_1 + C2*n + n, p = 5.618550500928283e-09, parse trees = 1, valid = False
-> C0*an_1*n + C1*n + n**2, p = 6.628721311475418e-05, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1*n**3 + an_1, p = 7.063391561408233e-05, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.001059508734211234, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_1*an_45, p = 5.030905670518681e-06, parse trees = 1, valid = False
-> C0*an_2*n + an_2, p = 0.00016104631371495132, parse trees = 1, valid = False

Total time consumed by now:0.09746447399993485


Equation discovery for all (chosen) OEIS sequences took 0.09746954900037963 secconds, i.e. 0.0016244924833396606 minutes or 2.7074874722327674e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 66
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_1 + C1*n**2 + an_1**2, p = 2.078812514573874e-06, parse trees = 1, valid = False
-> C0*an_3*n + an_3*n**6, p = 9.689151661739691e-10, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2*n + an_1**2, p = 2.0788125145738735e-06, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*an_2 + an_1*an_2*n**2, p = 4.118561465497118e-06, parse trees = 1, valid = False

Total time consumed by now:0.09679424000023573


Equation discovery for all (chosen) OEIS sequences took 0.09679959499953839 secconds, i.e. 0.0016133265833256397 minutes or 2.6888776388760662e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 67
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*an_4*n**3 + C1*an_1*an_4 + C2*n + an_1*n, p = 1.8849004810424845e-12, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_2*n**2 + n, p = 0.00016681967213114768, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1**2*n**3 + C1*an_1*n**2 + an_46, p = 7.896723702084995e-11, parse trees = 1, valid = False
-> an_1*an_11*n**3, p = 3.360868745821019e-07, parse trees = 1, valid = False

Total time consumed by now:0.09515824200025236


Equation discovery for all (chosen) OEIS sequences took 0.09516319200156431 secconds, i.e. 0.001586053200026072 minutes or 2.643422000043453e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 68
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_1 + C1*an_2*an_3 + n, p = 3.788299461188384e-06, parse trees = 1, valid = False
-> an_1**2*an_34*n**2, p = 2.1443204497292788e-07, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> an_1**3*an_40*n**2, p = 2.7419179521128448e-08, parse trees = 1, valid = False
-> C0*an_46 + an_1*an_2, p = 9.713588362021496e-07, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*n + n, p = 4.2380349368449404e-05, parse trees = 1, valid = False
-> C0*an_1**2 + n, p = 0.001765847890352057, parse trees = 1, valid = False

Total time consumed by now:0.09575758500068332


Equation discovery for all (chosen) OEIS sequences took 0.0957625340015511 secconds, i.e. 0.001596042233359185 minutes or 2.6600703889319752e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 69
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_1**3 + an_1, p = 0.00014436198017874117, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False
-> C0*an_1*an_36 + n, p = 5.030905670518681e-06, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n, p = 0.0016571803278688534, parse trees = 1, valid = False
-> C0*an_2*n + C1*an_26*n + C2*an_3*n + an_2, p = 1.0002577937144514e-11, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + C2*n + an_1, p = 3.76673720589454e-07, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.09766376799962018


Equation discovery for all (chosen) OEIS sequences took 0.09766913100065722 secconds, i.e. 0.0016278188500109536 minutes or 2.7130314166849226e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 70
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_3*n**2 + C1*n**2 + n, p = 1.2275409836065588e-06, parse trees = 1, valid = False
-> C0*an_2**2*n**4 + C1*n**2 + an_1*an_4*an_41, p = 5.4833804296425185e-15, parse trees = 1, valid = False
-> C0*an_1*an_12 + C1*an_1*an_4*n + C2*an_1 + an_1, p = 1.4424013004980718e-11, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2 + C2*an_5 + C3*n + an_1**3*n**2, p = 1.3458079971324725e-11, parse trees = 1, valid = False
-> C0*an_1 + C1*n**2 + an_1, p = 0.0002119017468422469, parse trees = 1, valid = False
-> C0*an_1**2 + an_1**2*n**2, p = 5.7744792071496496e-06, parse trees = 1, valid = False
-> C0*n + an_5*n, p = 3.017704918032788e-05, parse trees = 1, valid = False
-> an_1*an_2*n**2, p = 0.0001777586670249935, parse trees = 1, valid = False

Total time consumed by now:0.1231706309990841


Equation discovery for all (chosen) OEIS sequences took 0.12317585999880976 secconds, i.e. 0.0020529309999801626 minutes or 3.421551666633604e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 71
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*n + C1*an_2 + an_1, p = 4.091363418083456e-05, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_3*n**2, p = 0.0004262295081967215, parse trees = 1, valid = False
-> C0*n + an_1**3*n, p = 4.515938867129854e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_18 + C1*n + an_23*n, p = 1.7199685299029869e-09, parse trees = 1, valid = False
-> C0*an_1*an_30 + C1*n + n, p = 6.037086804623869e-07, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False

Total time consumed by now:0.0919794390010793


Equation discovery for all (chosen) OEIS sequences took 0.09198447900052997 secconds, i.e. 0.001533074650008833 minutes or 2.555124416681388e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 72
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_4*n + an_1**2, p = 6.722444609901273e-06, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.0025920000000000014, parse trees = 1, valid = False
-> C0*an_1*an_2 + n**3, p = 2.133104004299922e-05, parse trees = 1, valid = False
-> C0*an_1 + C1*n**2 + C2*n + an_1*an_2, p = 9.8192722034003e-07, parse trees = 1, valid = False
-> C0*an_1**2 + C1*n + an_1**2*an_2**2, p = 3.719834359740343e-10, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> C0*an_1**2 + C1*n + an_1*an_3, p = 1.604022001986013e-06, parse trees = 1, valid = False

Total time consumed by now:0.10306176599988248


Equation discovery for all (chosen) OEIS sequences took 0.10306689699973504 secconds, i.e. 0.0017177816166622506 minutes or 2.862969361103751e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 73
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*n, p = 0.046032786885245924, parse trees = 2, valid = False
-> C0*an_1**2*an_2*an_4*n + n**2, p = 1.0383666719847512e-08, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*n + an_1**2*n**2, p = 7.063391561408233e-05, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_38, p = 0.0003278688524590164, parse trees = 1, valid = False

Total time consumed by now:0.08653062400117051


Equation discovery for all (chosen) OEIS sequences took 0.086535789001573 secconds, i.e. 0.0014422631500262165 minutes or 2.403771916710361e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 74
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> C0*n + an_1**3, p = 0.00022579694335649256, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1 + C2*n**3 + an_1, p = 8.3152500582955e-08, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_4 + C1*n + an_26, p = 8.986831497175939e-08, parse trees = 1, valid = False
-> C0*an_1 + C1*n**2 + an_1*n**2, p = 8.47606987368988e-06, parse trees = 1, valid = False
-> C0*an_3 + n, p = 0.001278688524590164, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False

Total time consumed by now:0.09229801199944632


Equation discovery for all (chosen) OEIS sequences took 0.09230296599889698 secconds, i.e. 0.001538382766648283 minutes or 2.5639712777471384e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 75
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_1*an_4*n + C2*n + an_1**2*an_28*an_4, p = 2.0209153236073647e-17, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_6 + an_1, p = 4.654845471647407e-05, parse trees = 1, valid = False
-> an_1**3*n, p = 0.0003763282389274878, parse trees = 1, valid = False

Total time consumed by now:0.08748328599904198


Equation discovery for all (chosen) OEIS sequences took 0.087488665998535 secconds, i.e. 0.0014581444333089167 minutes or 2.4302407221815278e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 76
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n + an_2**2*n, p = 3.2209262742990264e-05, parse trees = 1, valid = False
-> C0*an_1 + an_36*n, p = 5.0309056705186815e-06, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_48, p = 0.0003278688524590164, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*n + C1*n**2 + an_1**2*an_2*an_3*n, p = 4.955230082638033e-10, parse trees = 1, valid = False
-> C0*an_1**2*n**3 + C1*an_1**2 + C2*an_1*an_2 + C3*n + an_2*n**3, p = 7.61041521468189e-14, parse trees = 1, valid = False

Total time consumed by now:0.10295768699870678


Equation discovery for all (chosen) OEIS sequences took 0.10296306099917274 secconds, i.e. 0.001716051016652879 minutes or 2.8600850277547983e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 77
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1 + n, p = 0.013809836065573775, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> an_1*n**4, p = 0.00018413114754098385, parse trees = 1, valid = False
-> C0*n + an_1*an_24*n, p = 1.006181134435274e-06, parse trees = 1, valid = False
-> C0*n + an_3*an_4, p = 4.867867060825944e-06, parse trees = 1, valid = False
-> an_1*an_48*n**2, p = 1.6769685568395603e-06, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*n + an_4*n, p = 8.222950819672135e-05, parse trees = 1, valid = False

Total time consumed by now:0.08679724700050429


Equation discovery for all (chosen) OEIS sequences took 0.08680224000090675 secconds, i.e. 0.0014467040000151125 minutes or 2.411173333358521e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 78
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*n + an_11, p = 3.9425575672131156e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*n + an_1*an_2, p = 0.0005332760010749802, parse trees = 1, valid = False
-> C0*an_1*n + C1*n + an_1**2, p = 2.7095633202779117e-05, parse trees = 1, valid = False
-> C0*an_1*an_3 + C1*n + an_1**3, p = 2.051044527129656e-07, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False
-> C0*an_1 + an_14, p = 2.5155932008102126e-05, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n**3, p = 5.085641924213928e-06, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False

Total time consumed by now:0.09948937999979535


Equation discovery for all (chosen) OEIS sequences took 0.09949466699981713 secconds, i.e. 0.0016582444499969522 minutes or 2.7637407499949203e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 79
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 5 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2*an_9*n + C1*n + n, p = 4.769590247218937e-09, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + n, p = 6.399312012899765e-05, parse trees = 1, valid = False

Total time consumed by now:0.07843253800092498


Equation discovery for all (chosen) OEIS sequences took 0.07843777100060834 secconds, i.e. 0.0013072961833434722 minutes or 2.1788269722391203e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 80
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2*an_2 + C3*an_3*n + an_2*n, p = 2.693612250049392e-10, parse trees = 1, valid = False
-> C0*an_1*n + an_21*n, p = 1.0061811463829146e-06, parse trees = 1, valid = False
-> C0*an_4 + n, p = 0.00041114754098360654, parse trees = 1, valid = False
-> an_15, p = 0.0003278743411119672, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_2 + an_1*n, p = 0.0005332760010749802, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*n + C1*n**2 + n, p = 6.628721311475418e-05, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.09316075800052204


Equation discovery for all (chosen) OEIS sequences took 0.09316580300037458 secconds, i.e. 0.0015527633833395764 minutes or 2.5879389722326273e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 81
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1**2 + C1*n + n, p = 0.0002119017468422469, parse trees = 1, valid = False
-> C0*an_2 + an_4, p = 7.938367822269999e-05, parse trees = 1, valid = False
-> an_37, p = 0.0003278688524590164, parse trees = 1, valid = False
-> an_1*n**4, p = 0.00018413114754098385, parse trees = 1, valid = False
-> an_27*an_46*n**2, p = 4.777688196166607e-09, parse trees = 1, valid = False
-> C0*n**2 + an_1**2*n, p = 7.063391561408233e-05, parse trees = 1, valid = False
-> an_1*an_4*n, p = 8.762160709486699e-05, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n**2 + an_1, p = 0.0027619672131147556, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1 + C2*an_2 + C3*an_3 + C4*n + an_1, p = 3.42154575542154e-10, parse trees = 1, valid = False

Total time consumed by now:0.102185288000328


Equation discovery for all (chosen) OEIS sequences took 0.10219032300119579 secconds, i.e. 0.0017031720500199298 minutes or 2.83862008336655e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 82
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_2 + n, p = 0.00417049180327869, parse trees = 1, valid = False
-> C0*an_1 + an_37, p = 2.5154528352593396e-05, parse trees = 1, valid = False
-> C0*an_1*an_37*n**3 + C1*an_1*n**2 + an_1*an_2*n**3, p = 2.439497886837189e-14, parse trees = 1, valid = False
-> C0*n + an_2, p = 0.00417049180327869, parse trees = 1, valid = False
-> C0*an_1*n + C1*n**3 + an_1*an_4*n, p = 6.45354682550523e-09, parse trees = 1, valid = False
-> C0*an_1 + an_1*n**2, p = 0.00035316957807041155, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n**4, p = 0.0014400000000000016, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_2*n**2, p = 0.0013901639344262304, parse trees = 1, valid = False

Total time consumed by now:0.10193409099883866


Equation discovery for all (chosen) OEIS sequences took 0.10193911199894501 secconds, i.e. 0.0016989851999824168 minutes or 2.8316419999706947e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 83
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*n**2 + an_2, p = 0.0008340983606557383, parse trees = 1, valid = False
-> C0*an_1**2*n**2 + C1*an_26*an_46*n**2 + an_2*n, p = 8.687670537427102e-15, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2 + n, p = 0.0003199656006449881, parse trees = 1, valid = False
-> C0*an_1 + an_2*n, p = 0.0005332760010749802, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*n + an_5, p = 2.960448812896237e-07, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False

Total time consumed by now:0.09645879399977275


Equation discovery for all (chosen) OEIS sequences took 0.09646389099907537 secconds, i.e. 0.0016077315166512563 minutes or 2.6795525277520936e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 84
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1 + C1*an_3 + C2*n + an_13*n**3, p = 1.715775442128575e-10, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1**3 + C1*an_1*n**3 + C2*an_1 + C3*an_44*n + n, p = 4.648137630006623e-13, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1**2*an_2*n + C1*n + n, p = 2.3566253288160726e-08, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> C0*an_16 + an_1, p = 2.515465468158918e-05, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1*an_1*n + n, p = 8.47606987368988e-06, parse trees = 1, valid = False
-> an_38, p = 0.0003278688524590164, parse trees = 1, valid = False

Total time consumed by now:0.10833040999932564


Equation discovery for all (chosen) OEIS sequences took 0.10833578199890326 secconds, i.e. 0.0018055963666483877 minutes or 3.0093272777473127e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 85
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 6 models
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*n**2 + C1*n + n, p = 0.0005184000000000005, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_2*an_38*n**3 + C1*n + an_1, p = 9.325044827540643e-10, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_2*an_20*n + C1*an_7 + an_1*n**2, p = 2.131936337233124e-12, parse trees = 1, valid = False

Total time consumed by now:0.08780416199988395


Equation discovery for all (chosen) OEIS sequences took 0.08780945299986342 secconds, i.e. 0.001463490883331057 minutes or 2.4391514722184286e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 86
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1 + C1*n + an_1, p = 0.0001271410481053481, parse trees = 1, valid = False
-> C0*an_1 + an_2, p = 0.0026663800053749005, parse trees = 1, valid = False
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*an_4 + n, p = 0.00041114754098360654, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_38*n, p = 7.868852459016397e-06, parse trees = 1, valid = False
-> C0*n**2 + an_1, p = 0.0027619672131147556, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + n, p = 6.399312012899765e-05, parse trees = 1, valid = False

Total time consumed by now:0.0896929150003416


Equation discovery for all (chosen) OEIS sequences took 0.08969796000019414 secconds, i.e. 0.0014949660000032358 minutes or 2.491610000005393e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 87
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False
-> C0*n**2 + n**3, p = 0.0001728000000000002, parse trees = 1, valid = False
-> C0*an_1**3*an_3 + C1*an_1*an_4 + an_1*n, p = 9.984212093901781e-11, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_2*n + C2*n**2 + C3*n + an_1, p = 2.3566253288160733e-08, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1 + C1*an_35*n + an_1*n, p = 7.719553619025392e-08, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False

Total time consumed by now:0.1024669910002558


Equation discovery for all (chosen) OEIS sequences took 0.10247205300038331 secconds, i.e. 0.0017078675500063886 minutes or 2.8464459166773143e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 88
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_2*n**2, p = 0.00016681967213114768, parse trees = 1, valid = False
-> C0*n + an_13*n, p = 7.870316099803282e-06, parse trees = 1, valid = False
-> an_26*n, p = 6.557377049374788e-05, parse trees = 1, valid = False
-> an_1**2*n, p = 0.0029430798172534293, parse trees = 1, valid = False
-> n**4, p = 0.0014400000000000016, parse trees = 1, valid = False
-> C0*an_1*an_23 + an_1*an_46*n, p = 2.343519619764438e-10, parse trees = 1, valid = False
-> an_1*an_3*an_4, p = 5.1870714582571536e-06, parse trees = 1, valid = False

Total time consumed by now:0.08924846899935801


Equation discovery for all (chosen) OEIS sequences took 0.08925353699851257 secconds, i.e. 0.0014875589499752095 minutes or 2.4792649166253494e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 89
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> n**3, p = 0.007200000000000005, parse trees = 1, valid = False
-> C0*n + an_1*n**2, p = 0.0005523934426229514, parse trees = 1, valid = False
-> C0*an_26 + n, p = 3.934426229624873e-05, parse trees = 1, valid = False
-> C0*an_1**2*n**2 + C1*an_1**2 + C2*an_1*n + C3*an_1 + C4*an_3 + C5*n + n, p = 8.344702428480093e-14, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_2*n + n, p = 0.0008340983606557383, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n**2 + an_2*n, p = 0.0001668196721311477, parse trees = 1, valid = False
-> an_1*an_2*n, p = 0.000888793335124967, parse trees = 1, valid = False
-> C0*an_20 + an_1*an_2*n, p = 1.9427177514324056e-07, parse trees = 1, valid = False

Total time consumed by now:0.10482447699905606


Equation discovery for all (chosen) OEIS sequences took 0.10482980999950087 secconds, i.e. 0.001747163499991681 minutes or 2.9119391666528017e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 90
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1**2*an_2 + C1*n + an_1**3*n, p = 1.7107728777107713e-08, parse trees = 1, valid = False
-> an_15, p = 0.0003278743411119672, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_6, p = 0.0006067213114754098, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False

Total time consumed by now:0.07837059700068494


Equation discovery for all (chosen) OEIS sequences took 0.07837564100009331 secconds, i.e. 0.0013062606833348885 minutes or 2.1771011388914807e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 91
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> C0*an_1 + C1*an_3*n + C2*n + an_4, p = 6.453546825505225e-10, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.013809836065573775, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*n + an_1*n, p = 0.002761967213114756, parse trees = 1, valid = False
-> C0*an_2 + n, p = 0.00417049180327869, parse trees = 1, valid = False
-> an_2*n, p = 0.006950819672131151, parse trees = 1, valid = False
-> an_1*an_2*n, p = 0.000888793335124967, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_1*an_14*an_2*n + C1*n**2 + an_2**2*an_43*n, p = 5.065937715369294e-16, parse trees = 1, valid = False

Total time consumed by now:0.09858628800066072


Equation discovery for all (chosen) OEIS sequences took 0.09859153499928652 secconds, i.e. 0.0016431922499881087 minutes or 2.7386537499801813e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 92
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 5 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*an_2 + n, p = 0.00417049180327869, parse trees = 1, valid = False
-> an_1*an_2, p = 0.008887933351249669, parse trees = 2, valid = False
-> C0*an_1 + C1*an_2 + C2*n**4 + C3*n + an_1**2, p = 3.0133897647156353e-09, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*n + an_1*n, p = 8.182726836166914e-06, parse trees = 1, valid = False

Total time consumed by now:0.08688997600074799


Equation discovery for all (chosen) OEIS sequences took 0.08689496700026211 secconds, i.e. 0.0014482494500043686 minutes or 2.4137490833406142e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 93
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2*n + n, p = 0.00010665520021499607, parse trees = 1, valid = False
-> C0*an_2*an_4*n**2 + an_1*n, p = 8.120559870649976e-08, parse trees = 1, valid = False
-> C0*an_1 + C1*n + n, p = 0.0016571803278688534, parse trees = 1, valid = False
-> an_1**2*an_2*n**2, p = 2.2729796767130323e-05, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_43*n + an_1**2, p = 9.870904627606237e-09, parse trees = 1, valid = False
-> C0*n**2 + C1*n + an_1**2*n**2, p = 1.6952139747379766e-06, parse trees = 1, valid = False

Total time consumed by now:0.10458830700008548


Equation discovery for all (chosen) OEIS sequences took 0.10459344999981113 secconds, i.e. 0.0017432241666635187 minutes or 2.9053736111058648e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 94
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_22*n, p = 6.557377073187698e-05, parse trees = 1, valid = False
-> C0*n + an_1*n**2, p = 0.0005523934426229514, parse trees = 1, valid = False
-> C0*an_1 + C1*an_3 + an_2*an_3*n**2, p = 6.88226400366393e-10, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*n + an_1, p = 0.0016571803278688534, parse trees = 1, valid = False
-> C0*an_2 + C1*n**2 + n, p = 0.0001000918032786886, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*n**4 + an_1, p = 2.167650656222332e-07, parse trees = 1, valid = False

Total time consumed by now:0.09619447600016429


Equation discovery for all (chosen) OEIS sequences took 0.09620018500027072 secconds, i.e. 0.0016033364166711786 minutes or 2.6722273611186313e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 95
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1 + C1*an_5 + an_2, p = 2.235096682101146e-06, parse trees = 1, valid = False
-> C0*n**2 + an_2, p = 0.0008340983606557383, parse trees = 1, valid = False
-> an_37*n, p = 6.55737704918033e-05, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_2 + C1*n + an_1*an_2, p = 1.4826821275789623e-06, parse trees = 1, valid = False
-> C0*n + an_16, p = 3.93444598865882e-05, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1*an_2*n**2 + n, p = 2.133104004299922e-05, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False

Total time consumed by now:0.0921154169991496


Equation discovery for all (chosen) OEIS sequences took 0.09212008599934052 secconds, i.e. 0.0015353347666556753 minutes or 2.5588912777594587e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 96
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> C0*an_1*n + an_1, p = 0.0017658478903520573, parse trees = 1, valid = False
-> C0*an_3*n + an_1**3*an_12*an_2, p = 3.763131752534991e-11, parse trees = 1, valid = False
-> an_1*an_2, p = 0.0044439666756248344, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + an_1*an_12, p = 5.034024904982533e-06, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> an_1*an_39*n**3, p = 3.3539371136791215e-07, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*n + n, p = 4.2380349368449404e-05, parse trees = 1, valid = False
-> C0*an_2*n + an_1**3*an_2*an_27*n, p = 2.453198770558612e-11, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*an_30 + n**2, p = 4.829669443699099e-09, parse trees = 1, valid = False

Total time consumed by now:0.10852512800011027


Equation discovery for all (chosen) OEIS sequences took 0.10853032999875722 secconds, i.e. 0.0018088388333126204 minutes or 3.0147313888543675e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 97
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_3, p = 0.010655737704918032, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + C2*an_3*an_45*n**2 + C3*n + an_1**2*n**2, p = 3.119357953660667e-16, parse trees = 1, valid = False
-> C0*an_1 + an_2, p = 0.0026663800053749005, parse trees = 1, valid = False
-> C0*an_1*an_2**2*n + C1*an_1*n + an_1*n**4, p = 6.464669400118551e-11, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1*an_1 + C2*n + an_2*n, p = 1.9638544406800602e-07, parse trees = 1, valid = False
-> an_1**3*n**2, p = 7.526564778549756e-05, parse trees = 1, valid = False
-> C0*an_1*an_2*an_3*n + C1*an_1 + n, p = 9.68811009746538e-08, parse trees = 1, valid = False
-> C0*n + an_1*an_3, p = 1.9620532115022856e-05, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False

Total time consumed by now:0.11837962600111496


Equation discovery for all (chosen) OEIS sequences took 0.11838458300007915 secconds, i.e. 0.0019730763833346525 minutes or 3.288460638891087e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 98
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n**2, p = 0.03600000000000001, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*an_1*n + C2*an_1 + C3*n**2 + C4*n + an_38*n, p = 6.586644294460405e-13, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_1*n**9 + C2*an_1*n + an_1*n**2, p = 2.7219493961318855e-14, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_3*n + C2*n**2 + n, p = 2.260285299650636e-09, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*an_1*n + an_1**2, p = 0.00022579694335649262, parse trees = 1, valid = False
-> C0*n + an_1**2*n, p = 0.00035316957807041155, parse trees = 1, valid = False
-> C0*n**2 + an_1, p = 0.0027619672131147556, parse trees = 1, valid = False

Total time consumed by now:0.11610180800016678


Equation discovery for all (chosen) OEIS sequences took 0.11610686799940595 secconds, i.e. 0.001935114466656766 minutes or 3.2251907777612764e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 99
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> an_1**2*n, p = 0.0029430798172534293, parse trees = 1, valid = False
-> C0*an_1*n + an_1*n, p = 0.0003531695780704116, parse trees = 1, valid = False
-> C0*n**2 + n, p = 0.004320000000000003, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_2 + n**2, p = 0.0008340983606557383, parse trees = 1, valid = False
-> an_1*an_24, p = 4.192421393480307e-05, parse trees = 1, valid = False
-> an_2*an_5*n**3, p = 3.88435605721282e-07, parse trees = 1, valid = False

Total time consumed by now:0.08484232900082134


Equation discovery for all (chosen) OEIS sequences took 0.08484745600071619 secconds, i.e. 0.0014141242666786031 minutes or 2.356873777797672e-05 hours.





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 100
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 10 models
-> an_2, p = 0.034754098360655745, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_3 + an_2*n, p = 9.688110097465382e-08, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1*an_1 + C2*an_2*an_29*n + C3*an_2 + an_1, p = 1.059781868872741e-12, parse trees = 1, valid = False
-> C0*an_1**3*an_5*n**3 + C1*an_4 + C2*an_41 + an_1, p = 8.055637792002801e-16, parse trees = 1, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2 + C2*an_24 + an_1*n, p = 8.942870862145495e-09, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n**2, p = 0.004320000000000003, parse trees = 1, valid = False
-> C0*an_1 + an_42, p = 2.5154528352593396e-05, parse trees = 1, valid = False

Total time consumed by now:0.11333577300138131


Equation discovery for all (chosen) OEIS sequences took 0.11334094900121272 secconds, i.e. 0.0018890158166868787 minutes or 3.148359694478131e-05 hours.
20





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 20
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_1, p = 0.00034094695150695456, parse trees = 1, valid = False
-> C0*n + an_1*an_4, p = 6.308755710830424e-06, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_2*n**2, p = 1.0463158905262614e-06, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*n**3 + n, p = 0.0008640000000000007, parse trees = 1, valid = False
-> an_1*an_3, p = 0.0013625369524321422, parse trees = 1, valid = False

Total time consumed by now:0.09054732299955504


Equation discovery for all (chosen) OEIS sequences took 0.09055267099938646 secconds, i.e. 0.0015092111833231077 minutes or 2.5153519722051797e-05 hours.
21
20





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 20
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_1, p = 0.00034094695150695456, parse trees = 1, valid = False
-> C0*n + an_1*an_4, p = 6.308755710830424e-06, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_2*n**2, p = 1.0463158905262614e-06, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*n**3 + n, p = 0.0008640000000000007, parse trees = 1, valid = False
-> an_1*an_3, p = 0.0013625369524321422, parse trees = 1, valid = False

Total time consumed by now:0.09034159699876909


Equation discovery for all (chosen) OEIS sequences took 0.09034644599887542 secconds, i.e. 0.001505774099981257 minutes or 2.509623499968762e-05 hours.
21





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 21
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*an_2 + C1*n + an_1*an_2*n**2, p = 6.319628740500497e-08, parse trees = 1, valid = False
-> C0*an_1**3*n + an_1, p = 2.8872396035748254e-05, parse trees = 1, valid = False
-> C0*an_2 + an_1**2, p = 0.00034094695150695456, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1**3*an_3 + an_1*an_2*n, p = 1.3200408007027546e-08, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False

Total time consumed by now:0.09544801500123867


Equation discovery for all (chosen) OEIS sequences took 0.09545334600079514 secconds, i.e. 0.0015908891000132523 minutes or 2.6514818333554204e-05 hours.
22





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 22
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.02419200000000001, parse trees = 2, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + an_1**2*n, p = 0.00022579694335649264, parse trees = 1, valid = False
-> C0*an_1*an_2 + n, p = 0.0005332760010749802, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False

Total time consumed by now:0.08535542999925383


Equation discovery for all (chosen) OEIS sequences took 0.08536116699906415 secconds, i.e. 0.0014226861166510693 minutes or 2.371143527751782e-05 hours.
seed seed 20 seed





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 20
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 9 models
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1*an_2 + an_1, p = 0.00034094695150695456, parse trees = 1, valid = False
-> C0*n + an_1*an_4, p = 6.308755710830424e-06, parse trees = 1, valid = False
-> an_1*n**2, p = 0.004603278688524594, parse trees = 1, valid = False
-> C0*an_1 + an_1*an_2*n**2, p = 1.0463158905262614e-06, parse trees = 1, valid = False
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> an_1**2, p = 0.014715399086267138, parse trees = 1, valid = False
-> C0*n**3 + n, p = 0.0008640000000000007, parse trees = 1, valid = False
-> an_1*an_3, p = 0.0013625369524321422, parse trees = 1, valid = False

Total time consumed by now:0.09086236199982523


Equation discovery for all (chosen) OEIS sequences took 0.09086753799965663 secconds, i.e. 0.001514458966660944 minutes or 2.5240982777682398e-05 hours.
seed seed 21 seed





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 21
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 8 models
-> C0*an_1*an_2 + C1*n + an_1*an_2*n**2, p = 6.319628740500497e-08, parse trees = 1, valid = False
-> C0*an_1**3*n + an_1, p = 2.8872396035748254e-05, parse trees = 1, valid = False
-> C0*an_2 + an_1**2, p = 0.00034094695150695456, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.021600000000000008, parse trees = 1, valid = False
-> an_1*n, p = 0.023016393442622962, parse trees = 1, valid = False
-> C0*an_1**3*an_3 + an_1*an_2*n, p = 1.3200408007027546e-08, parse trees = 1, valid = False
-> C0*n + an_3, p = 0.001278688524590164, parse trees = 1, valid = False

Total time consumed by now:0.09562212499986344


Equation discovery for all (chosen) OEIS sequences took 0.09562747499876423 secconds, i.e. 0.0015937912499794037 minutes or 2.656318749965673e-05 hours.
seed seed 22 seed





 TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...)
parameter_estimation avoids more than 5 parameters to estimate. In oeis exact may use more than 5 constants? 
TRY GRAMMAR WITH / DIVIDING NONCONSTANT VARIABLES (an_1, n, ...) 





1
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 10
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = polynomial2
=>> generator_settings = {'functions': [], 'p_F': []}
=>> optimizer = oeis_exact
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 22
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 50
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000045',)
data shape (49, 51)
data: [[1.00000000e+00 1.00000000e+00 0.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [1.00000000e+00 2.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [2.00000000e+00 3.00000000e+00 1.00000000e+00 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 ...
 [2.97121507e+09 4.70000000e+01 1.83631190e+09 ... 0.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [4.80752698e+09 4.80000000e+01 2.97121507e+09 ... 1.00000000e+00
  0.00000000e+00 0.00000000e+00]
 [7.77874205e+09 4.90000000e+01 4.80752698e+09 ... 1.00000000e+00
  1.00000000e+00 0.00000000e+00]]
data[:4][:4] : [[1. 1. 0. 0. 0. 0.]
 [1. 2. 1. 0. 0. 0.]
 [2. 3. 1. 1. 0. 0.]
 [3. 4. 2. 1. 1. 0.]
 [5. 5. 3. 2. 1. 1.]
 [8. 6. 5. 3. 2. 1.]] [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1.]
=>> Grammar used: 
Grammar with 55 productions (start state = S)
    S -> S '+' 'C' '*' R [0.4]
    S -> R [0.6]
    R -> T [1.0]
    T -> T '*' V [0.4]
    T -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.319672]
    V -> 'an_2' [0.0965392]
    V -> 'an_3' [0.0295993]
    V -> 'an_4' [0.0095173]
    V -> 'an_5' [0.00349271]
    V -> 'an_6' [0.00168534]
    V -> 'an_7' [0.00114312]
    V -> 'an_8' [0.00098046]
    V -> 'an_9' [0.000931661]
    V -> 'an_10' [0.000917021]
    V -> 'an_11' [0.000912629]
    V -> 'an_12' [0.000911311]
    V -> 'an_13' [0.000910916]
    V -> 'an_14' [0.000910798]
    V -> 'an_15' [0.000910762]
    V -> 'an_16' [0.000910751]
    V -> 'an_17' [0.000910748]
    V -> 'an_18' [0.000910747]
    V -> 'an_19' [0.000910747]
    V -> 'an_20' [0.000910747]
    V -> 'an_21' [0.000910747]
    V -> 'an_22' [0.000910747]
    V -> 'an_23' [0.000910747]
    V -> 'an_24' [0.000910747]
    V -> 'an_25' [0.000910747]
    V -> 'an_26' [0.000910747]
    V -> 'an_27' [0.000910747]
    V -> 'an_28' [0.000910747]
    V -> 'an_29' [0.000910747]
    V -> 'an_30' [0.000910747]
    V -> 'an_31' [0.000910747]
    V -> 'an_32' [0.000910747]
    V -> 'an_33' [0.000910747]
    V -> 'an_34' [0.000910747]
    V -> 'an_35' [0.000910747]
    V -> 'an_36' [0.000910747]
    V -> 'an_37' [0.000910747]
    V -> 'an_38' [0.000910747]
    V -> 'an_39' [0.000910747]
    V -> 'an_40' [0.000910747]
    V -> 'an_41' [0.000910747]
    V -> 'an_42' [0.000910747]
    V -> 'an_43' [0.000910747]
    V -> 'an_44' [0.000910747]
    V -> 'an_45' [0.000910747]
    V -> 'an_46' [0.000910747]
    V -> 'an_47' [0.000910747]
    V -> 'an_48' [0.000910747]
    V -> 'an_49' [0.000910747]

ModelBox: 7 models
-> C0*an_1*n + n, p = 0.002761967213114756, parse trees = 1, valid = False
-> n, p = 0.18000000000000002, parse trees = 1, valid = False
-> C0*n + n, p = 0.02419200000000001, parse trees = 2, valid = False
-> an_1, p = 0.11508196721311477, parse trees = 1, valid = False
-> C0*an_1 + an_1**2*n, p = 0.00022579694335649264, parse trees = 1, valid = False
-> C0*an_1*an_2 + n, p = 0.0005332760010749802, parse trees = 1, valid = False
-> an_3*n, p = 0.0021311475409836068, parse trees = 1, valid = False

Total time consumed by now:0.08391286000005493


Equation discovery for all (chosen) OEIS sequences took 0.0839183910011343 secconds, i.e. 0.001398639850018905 minutes or 2.331066416698175e-05 hours.
