command that produced this output:
pyv fibonacci_oneby1.py --seq_only=A000108  --number_of_terms=30 --sample_size=100


output:

First the fake output (forgot to output it to a file):
--- end of fake output (produced afterwards) ---
  ...
 
Running equation discovery for all oeis sequences, with these settings:
=>> sample_size = 100
=>> grammar's q and p = 0.5 and 0.3
=>> grammar_template_name = simplerational2
=>> generator_settings = {'functions': ["'sqrt'", "'exp'", "'log'"], 'p_F': [0.333, 0.333, 0.333]}
=>> optimizer = differential_evolution
=>> task_type = algebraic
=>> timeout = inf
=>> random_seed = 5
=>> lower_upper_bounds = (-4, 4)
=>> number of terms in every sequence saved in csv = 50
=>> number of terms in every sequence actually used = 30
=>> number of all considered sequences = 1
=>> list of considered sequences = ('A000108',)
=>> Grammar used: 
Grammar with 40 productions (start state = S)
    S -> P '/' R [0.2]
    S -> P [0.8]
    P -> P '+' 'C' '*' R [0.57]
    P -> 'C' [0.43]
    R -> 'sqrt' '(' 'C' '*' M ')' [0.133253]
    R -> 'exp' '(' 'C' '*' M ')' [0.133253]
    R -> 'log' '(' 'C' '*' M ')' [0.133253]
    R -> M [0.60024]
    M -> M '*' V [0.4]
    M -> V [0.6]
    V -> 'n' [0.5]
    V -> 'an_1' [0.331758]
    V -> 'an_2' [0.100189]
    V -> 'an_3' [0.0307183]
    V -> 'an_4' [0.00987713]
    V -> 'an_5' [0.00362476]
    V -> 'an_6' [0.00174905]
    V -> 'an_7' [0.00118634]
    V -> 'an_8' [0.00101753]
    V -> 'an_9' [0.000966884]
    V -> 'an_10' [0.000951691]
    V -> 'an_11' [0.000947133]
    V -> 'an_12' [0.000945766]
    V -> 'an_13' [0.000945355]
    V -> 'an_14' [0.000945232]
    V -> 'an_15' [0.000945195]
    V -> 'an_16' [0.000945184]
    V -> 'an_17' [0.000945181]
    V -> 'an_18' [0.00094518]
    V -> 'an_19' [0.00094518]
    V -> 'an_20' [0.00094518]
    V -> 'an_21' [0.00094518]
    V -> 'an_22' [0.00094518]
    V -> 'an_23' [0.00094518]
    V -> 'an_24' [0.00094518]
    V -> 'an_25' [0.00094518]
    V -> 'an_26' [0.00094518]
    V -> 'an_27' [0.00094518]
    V -> 'an_28' [0.00094518]
    V -> 'an_29' [0.00094518]

ModelBox: 87 models
-> C0*an_1**2*an_3*n**4 + C1*an_1*an_14 + C2*n**2 + C3*log(C4*an_1) + C5, p = 4.884699636053873e-16, parse trees = 1, valid = False
-> C0*n + C1, p = 0.035626427281596915, parse trees = 2, valid = False
-> C0*an_1/an_2 + C1, p = 0.0002113330689625042, parse trees = 1, valid = False
-> C0*an_2*an_3*n**2/sqrt(C1*an_2) + C2*n + C3*sqrt(C4*an_1**2*n**2) + C5, p = 5.736208596435445e-14, parse trees = 1, valid = False
-> C0*an_2*an_4 + C1*log(C2*an_3*n) + C3, p = 3.102210664033017e-11, parse trees = 1, valid = False
-> C0*sqrt(C1*an_1) + C2*exp(C3*an_1**2*n**2) + C4, p = 1.9286717446398802e-09, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_1 + C2, p = 1.4419744188909757e-05, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2*n**2 + C3*exp(C4*an_1*an_2) + C5*log(C6*an_1) + C7*log(C8*an_1**5*an_2*n**3) + C9, p = 2.849410745477606e-23, parse trees = 1, valid = False
-> C0*an_3*n/log(C1*an_1) + C2*n + C3*sqrt(C4*an_1) + C5*log(C6*an_1**2) + C7, p = 8.957391236417751e-12, parse trees = 1, valid = False
-> C0*log(C1*an_1*n**3) + C2 + C3*log(C4*an_1**2*n)/log(C5*n), p = 1.6685920516925145e-10, parse trees = 1, valid = False
-> C0*an_1*n + C1*sqrt(C2*n) + C3*log(C4*n**2) + C5, p = 4.865630970887606e-07, parse trees = 1, valid = False
-> C0*an_2*n + C1*exp(C2*an_1) + C3*exp(C4*an_2*n) + C5, p = 2.9536911779574275e-10, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1**2 + C10 + C2*an_1*an_3*n**4 + C3*an_2**2*n + C4*an_2 + C5*an_26 + C6*an_3 + C7*n + C8*sqrt(C9*an_1), p = 4.971431491378552e-27, parse trees = 1, valid = False
-> C0 + C1*exp(C2*n)/sqrt(C3*n), p = 7.833787219569703e-05, parse trees = 1, valid = False
-> C0*exp(C1*an_1) + C2, p = 0.005200965521936567, parse trees = 1, valid = False
-> C0*n**2 + C1*n + C2*sqrt(C3*n) + C4*exp(C5*an_1**2*n) + C6*log(C7*n) + C8, p = 1.5101351223062805e-10, parse trees = 1, valid = False
-> C0*an_1 + C1*n + C2, p = 0.0024046513314816545, parse trees = 1, valid = False
-> C0*an_1*n + C1, p = 0.004685554524267179, parse trees = 1, valid = False
-> C0*sqrt(C1*n) + C2, p = 0.007838492196878752, parse trees = 1, valid = False
-> C0*an_1**3 + C1*n + C2*sqrt(C3*an_2*an_3) + C4, p = 2.438473682408718e-10, parse trees = 1, valid = False
-> C0*n + C1*log(C2*an_1*an_2*n) + C3, p = 4.278733847442447e-06, parse trees = 1, valid = False
-> C0*an_3*n + C1, p = 0.00043384764113584977, parse trees = 1, valid = False
-> C0*an_3 + C1, p = 0.0021692382056792484, parse trees = 1, valid = False
-> C0*an_1 + C1*an_3*n + C2*n + C3*exp(C4*n) + C5*log(C6*n) + C7, p = 1.5746320511201616e-09, parse trees = 1, valid = False
-> C0*an_1*n**4 + C1, p = 3.3749492371672397e-07, parse trees = 1, valid = False
-> C0*an_1/n + C1, p = 0.0010546716366147608, parse trees = 1, valid = False
-> C0*an_1*n + C1*log(C2*n) + C3, p = 0.0001067665191177855, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2 + C3*sqrt(C4*an_1)/n, p = 2.1719276403602256e-07, parse trees = 1, valid = False
-> C0*log(C1*n) + C2, p = 0.007909066856514515, parse trees = 2, valid = False
-> C0*n*sqrt(C1*an_1*n) + C2*log(C3*an_1**2*n**2) + C4, p = 6.618050557749789e-11, parse trees = 1, valid = False
-> C0*an_1**5*an_2*n**3 + C1*sqrt(C2*an_1) + C3*exp(C4*n**2) + C5, p = 1.6049316891741735e-13, parse trees = 1, valid = False
-> C0/log(C1*an_1*n), p = 0.00045622504578390953, parse trees = 1, valid = False
-> C0*an_1 + C1*an_3 + C2, p = 0.00014773377745397697, parse trees = 1, valid = False
-> C0*an_1**2*an_6 + C1*an_1**2*n + C11 + C2*an_1*n + C3*an_1 + C4*n + C5*sqrt(C6*an_1*an_2) + C7*exp(C8*an_1**2) + C9*exp(C10*n), p = 4.8093675431777233e-23, parse trees = 1, valid = False
-> C0/n, p = 0.01548619447779112, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1, p = 0.0018742218097068716, parse trees = 2, valid = False
-> C0*an_2 + C1, p = 0.00707505384006155, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1*n**2 + C2*an_1*n + C3*an_1 + C4*an_2*n + C5*an_2 + C6*n + C7*sqrt(C8*an_1) + C9, p = 1.4048886645306546e-17, parse trees = 1, valid = False
-> C0*an_2 + C1*n + C2*sqrt(C3*an_2) + C4*log(C5*an_1) + C6, p = 5.145431358553481e-09, parse trees = 1, valid = False
-> C0*an_1**2 + C1, p = 0.0031089407145893774, parse trees = 1, valid = False
-> C0*an_1**2/n + C1, p = 0.0001399583154827151, parse trees = 1, valid = False
-> C0*an_1**2 + C1*n + C2*sqrt(C3*an_1) + C4*sqrt(C5*an_2*an_5) + C6, p = 3.193912829218937e-11, parse trees = 1, valid = False
-> C0*an_1*n*exp(C1*an_1**3) + C2, p = 5.471602778041096e-07, parse trees = 1, valid = False
-> C0*sqrt(C1*an_1) + C2, p = 0.005200965521936567, parse trees = 1, valid = False
-> C0*sqrt(C1*n) + C2*log(C3*an_2*an_3) + C4, p = 4.397587565426957e-07, parse trees = 1, valid = False
-> C0*exp(C1*n) + C2 + C3*log(C4*an_1)/an_1, p = 3.5399389587718247e-06, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1*an_1 + C10*log(C11*n) + C12 + C2*an_2 + C3*n + C4*sqrt(C5*an_1) + C6*exp(C7*an_1) + C8*exp(C9*n), p = 1.0910583178059115e-15, parse trees = 1, valid = False
-> C0*an_1 + C1, p = 0.023427772621335885, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + C2*exp(C3*an_1*an_2*n) + C4, p = 1.1677987856222923e-08, parse trees = 1, valid = False
-> C0*an_1**3 + C1*an_1*an_2**2 + C2*an_1 + C3*an_2 + C4*n**2 + C5, p = 1.2975430903919558e-12, parse trees = 1, valid = False
-> C0*an_1*an_15 + C1*an_1*n + C2*n + C3*sqrt(C4*n**2) + C5, p = 5.792438849310579e-12, parse trees = 1, valid = False
-> C0 + C1*n/an_1, p = 0.0010546716366147608, parse trees = 1, valid = False
-> C0*exp(C1*n**2), p = 0.000687587034813926, parse trees = 1, valid = False
-> C0*an_1*n**3 + C1*n + C2, p = 1.9237210651853256e-05, parse trees = 1, valid = False
-> C0*an_1**2 + C1*an_11 + C2*log(C3*n) + C4, p = 1.3773636145838253e-08, parse trees = 1, valid = False
-> C0*an_1**2*n + C1*an_1 + C2*exp(C3*an_1) + C4, p = 6.402366419875936e-07, parse trees = 1, valid = False
-> C0*exp(C1*an_2*an_4*n**3) + C2*log(C3*n) + C4, p = 1.1311948322144435e-09, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2*an_2 + C3*log(C4*n) + C5, p = 2.036955312928342e-09, parse trees = 1, valid = False
-> C0*an_1**2 + C1*n + C2, p = 0.0003191049593005903, parse trees = 1, valid = False
-> C0*sqrt(C1*an_3*n**3) + C2, p = 3.852567053286348e-06, parse trees = 1, valid = False
-> C0/sqrt(C1*an_1), p = 0.002281125228919547, parse trees = 1, valid = False
-> C0*an_1**3 + C1*an_1 + C2*an_17 + C3*n + C4*log(C5*n) + C6, p = 1.3087263550279266e-12, parse trees = 1, valid = False
-> C0*an_1*n + C1*an_1 + C2, p = 0.0003191049593005904, parse trees = 1, valid = False
-> C0*an_1*an_2 + C1, p = 0.0009388823810440856, parse trees = 1, valid = False
-> C0*an_1**2*an_2 + C1*n + C2, p = 1.278832729144144e-05, parse trees = 1, valid = False
-> C0*an_1*n + C1*n + C2, p = 0.0004809302662963311, parse trees = 1, valid = False
-> C0*an_16*n + C1*exp(C2*n)*log(C3*an_1) + C4, p = 2.0170693656758065e-09, parse trees = 1, valid = False
-> C0*n**2 + C1*log(C2*an_2) + C3, p = 3.224288041733693e-05, parse trees = 1, valid = False
-> C0/log(C1*n), p = 0.0034379351740696285, parse trees = 1, valid = False
-> C0*n**2 + C1*n + C2*exp(C3*an_4) + C4*log(C5*an_1*an_3) + C6, p = 6.2211360809851425e-12, parse trees = 1, valid = False
-> C0*exp(C1*an_2*n), p = 0.00013777736425383023, parse trees = 1, valid = False
-> C0*an_1*n**2/an_3 + C1*an_2 + C2, p = 5.3306019455454854e-08, parse trees = 1, valid = False
-> C0*an_3 + C1*n + C2, p = 0.00022265290106311615, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2 + C2, p = 0.0004818393972345096, parse trees = 1, valid = False
-> C0*an_1**2 + C1*log(C2*an_1**2*an_27*n) + C3, p = 4.716542281302339e-10, parse trees = 1, valid = False
-> C0*n + C1*exp(C2*n) + C3, p = 0.0008045511198476991, parse trees = 1, valid = False
-> C0*an_1 + C1*an_2*n + C10 + C2*an_20 + C3*n + C4*exp(C5*n) + C6*exp(C7*an_1*n) + C8*exp(C9*an_2*n**2), p = 2.4788707109172292e-18, parse trees = 1, valid = False
-> C0*n**2 + C1*n + C2*sqrt(C3*n**2) + C4*exp(C5*n**3) + C6, p = 3.090223854955192e-10, parse trees = 1, valid = False
-> C0*an_1**2*an_2, p = 2.1858370029282288e-06, parse trees = 1, valid = False
-> C0*log(C1*n**2) + C2, p = 0.0015676984393757508, parse trees = 1, valid = False
-> C0*an_1**2*an_27 + C1*an_1 + C2, p = 8.004962869308198e-08, parse trees = 1, valid = False
-> C0*an_1*an_3 + C1, p = 0.0002878648809804979, parse trees = 1, valid = False
-> C0*an_1*an_2*an_3**2 + C1*an_1 + C2*n**2 + C3*sqrt(C4*an_1) + C5*exp(C6*n) + C7, p = 7.215543486343947e-18, parse trees = 1, valid = False
-> C0*an_1*n**2 + C1*an_1 + C2*log(C3*an_2*n) + C4, p = 3.969084855366804e-09, parse trees = 1, valid = False
-> C0*an_1*an_2**2*n + C1*an_1 + C2*sqrt(C3*n**2) + C4*log(C5*n**2) + C6, p = 1.0643932172819564e-11, parse trees = 1, valid = False
-> C0*n + C1*sqrt(C2*an_1) + C3*sqrt(C4*n**2) + C5*exp(C6*n) + C7, p = 1.2631570405513166e-09, parse trees = 1, valid = False
-> C0*an_1*an_4 + C1*n + C2*sqrt(C3*an_2*n) + C4, p = 8.675549745819635e-09, parse trees = 1, valid = False
Estimating model C0*an_1**2*an_3*n**4 + C1*an_1*an_14 + C2*n**2 + C3*log(C4*an_1) + C5
model: -2.40902403588894*an_1**2*an_3*n**4 + 3.0249688526287*an_1*an_14 + 3.70483087001483*n**2 + 4.2274961394567*log(-4.97785787467556*an_1) - 0.305116282424227; p: 4.884699636053873e-16  ; error: 100000000
Estimating model C0*n + C1
model: 3.98076208475784*n - 1.90640135806525                                 ; p: 0.035626427281596915   ; error: 3.7215522287305236e+28

--- end of fake output (produced afterwards) ---

   .
   .
   .


--- real output (copied from terminal only this lines): ---
<string>:2: RuntimeWarning: divide by zero encountered in log
model: 2.32928467910209*an_1*n**2 - 1.81799406382637*an_1 - 0.854220290691038*log(2.68504782130026*an_2*n) + 1.11154321277943; p: 3.969084855366804e-09  ; error: 1000000000.0
Estimating model C0*an_1*an_2**2*n + C1*an_1 + C2*sqrt(C3*n**2) + C4*log(C5*n**2) + C6
model: -3.21021323904843*an_1*an_2**2*n + 2.08895646141489*an_1 - 2.10417312908767*sqrt(n**2) - 0.757421224811456*log(-0.0936182664402685*n**2) + 1.26170345644554; p: 1.0643932172819564e-11 ; error: 100000000
Estimating model C0*n + C1*sqrt(C2*an_1) + C3*sqrt(C4*n**2) + C5*exp(C6*n) + C7
model: -1.05948727795045*n - 4.12548831141704*sqrt(-an_1) - 0.0314215883238968*sqrt(-n**2) + 4.4352445766467*exp(1.95923379925648*n) + 2.60678721160091; p: 1.2631570405513166e-09 ; error: 100000000
Estimating model C0*an_1*an_4 + C1*n + C2*sqrt(C3*an_2*n) + C4
model: 2.17760681998371*an_1*an_4 + 1.29012775386949*n + 0.376532509382836*sqrt(-an_2*n) + 1.64376470194479; p: 8.675549745819635e-09  ; error: 1000000000.0

Parameter fitting for sequence A000108 took 246.71689364600024 secconds.

Final score:
model: -2.40902403588894*an_1**2*an_3*n**4 + 3.0249688526287*an_1*an_14 + 3.70483087001483*n**2 + 4.2274961394567*log(-4.97785787467556*an_1) - 0.305116282424227; error: 100000000      
model: 3.98076208475784*n - 1.90640135806525; error: 3.7215522287305236e+28
model: -2.00282279213974*an_1/an_2 + 2.49511722058307; error: 1000000000.0   
model: 0.201696696553974*an_2*an_3*n**2/sqrt(-an_2) + 3.0047642075057*n - 4.08706047052354*sqrt(an_1**2*n**2) - 0.886163842206235; error: 100000000      
model: -2.89239432922787*an_2*an_4 - 3.3210989571481*log(2.27187786565912*an_3*n) + 3.45998491788577; error: 1000000000.0   
model: -3.25471531816151*sqrt(-an_1) - 2.3392022844953*exp(0.598082807966686*an_1**2*n**2) + 2.94781389235616; error: 1000000000.0   
model: 3.79948060965916*an_1 - 3.88842130251172; error: 1.0075499626093173e+22
model: 0.829108159234136*an_1*n + 2.70260002971461*an_1 + 0.99993166737686*n**2 - 0.0298964992494488*log(-1.61661351027137*an_1) + 2.42750741517531*log(-1.99504130226561*an_1**5*an_2*n**3) + 2.98786274566668 + 4.61467485846172*exp(-1.20221610581783*an_1*an_2); error: 100000000      
model: 4.9005555332307*an_3*n/log(0.881996127046236*an_1) + 3.87899396962974*n + 0.815014678307455*sqrt(-an_1) - 1.94451470273495*log(-1.49820421903304*an_1**2) + 2.7713429224723; error: 100000000      
model: 4.25651813083679*log(4.61368076131451*an_1*n**3) - 4.93391892010425 - 0.670694144866192*log(0.831126288435887*an_1**2*n)/log(-1.51172427776904*n); error: 100000000      
model: 4.38242093342152*an_1*n + 6.91322692787935*sqrt(n) - 3.63120967679118*log(3.89898985442945*n**2) - 0.587397064453014; error: 100000000      
model: -2.04808519541751*an_2*n + 0.0432241412636591*exp(3.74183720385663*an_2*n) - 0.146033269324701 + 2.6403466566122*exp(-1.7895626401448*an_1); error: 100000000      
model: 1.89459206023935*an_1**2*n - 0.541313200884733*an_1**2 + 3.78110279742376*an_1*an_3*n**4 - 2.04388898826932*an_2**2*n - 2.29796151528639*an_2 - 4.78068105091247*an_26 + 3.71350880483909*an_3 - 3.33940220163846*n - 3.52732996082345*sqrt(-an_1) + 4.2205218036744; error: 100000000      
model: 2.47814615005568 - 3.00863662743196*exp(2.29368927331039*n)/sqrt(-n); error: 1000000000.0   
model: -1.1634324911382*exp(1.18199209412787*an_1) - 2.62498305448819; error: 1000000000.0   
model: 0.285048644601877*sqrt(n) - 4.21834091529441*n**2 + 3.29808402863943*n + 2.39110905766479*exp(0.277993576896584*an_1**2*n) + 2.27295475951771*log(4.43822912511179*n) + 4.48426091230576; error: 100000000      
model: 3.79948173698108*an_1 - 1.60268118729274*n + 0.742672274069457; error: 1.0075496318915326e+22
model: 0.131343206251242*an_1*n + 1.9495507076892; error: 3.205638880965199e+24
model: 1.73905109100775 - 0.598278611926968*sqrt(-n); error: 1000000000.0   
model: -3.47114844704957*an_1**3 + 0.780989713180221*n + 0.584847109993236*sqrt(-an_2*an_3) - 2.88739021397534; error: 1000000000.0   
model: 1.96828415378478*n - 1.97443158455572*log(2.06370626678429*an_1*an_2*n) + 3.31722512454931; error: 1000000000.0   
model: 1.88552083260949*an_3*n - 1.366321933159; error: 2.480370439346962e+24
model: 4.0*an_3 + 2.01833099974895   ; error: 3.1957105993105662e+28
model: -3.43640494023609*an_1 - 3.82441893178669*an_3*n - 3.452540152863*n + 4.29533309669645*exp(1.70457969514708*n) + 4.04861010709967*log(1.14694937558334*n) - 2.87187875472647; error: 100000000      
model: 5.41734767724335e-6*an_1*n**4 + 2.68061461745601; error: 4.929930204009713e+25
model: 4.0*an_1/n - 0.136707276277954; error: 3.4555558628875324e+28
model: -2.5557850691243*an_1*n - 2.46943210675772*log(-1.43774987643007*n) - 0.601116512360114; error: 1000000000.0   
model: -2.09412434686005*an_1*n - 0.775722395570216*an_1 + 3.33564597263626 + 1.28608720239407*sqrt(-an_1)/n; error: 1000000000.0   
model: 1.52401789872343*log(-2.34829474408199*n) + 2.45103745261391; error: 1000000000.0   
model: -3.62996711517984*n*sqrt(-an_1*n) - 1.43541566471565*log(2.6709622806173*an_1**2*n**2) + 2.20551324068272; error: 1000000000.0   
model: 4.46798006108015*an_1**5*an_2*n**3 - 2.44806531374344*sqrt(-an_1) + 1.69939390246434*exp(1.22705372743424*n**2) - 2.28179317930934; error: 100000000      
model: -2.32482179187695/log(-1.1896875429208*an_1*n); error: 1000000000.0   
model: 4.0*an_1 - 2.87851405767138*an_3 + 2.5436534005575; error: 7.835814299023699e+21
model: 1.80535285790488*an_1**2*an_6 - 4.32890030002947*an_1**2*n + 2.8331208019321*an_1*n + 2.25543324082825*an_1 + 1.98938480154152*n - 1.09055425069763*sqrt(-an_1*an_2) - 3.94047829729645*exp(2.72581799927944*n) + 1.61929913585452 - 0.0567677844829151*exp(-0.939516394511994*an_1**2); error: 100000000      
model: 3.91520156776253/n            ; error: 3.7215522287315734e+28
model: 0.00453912372485445*an_1*n**2 + 0.109760349247875; error: 1.2998453727105858e+25
model: 4.0*an_2 + 2.26398489373967   ; error: 1.9421877990758915e+28
model: -4.01112414067695*an_1**2*n - 3.27439655062583*an_1*n**2 + 1.03596292487155*an_1*n - 1.20852248018438*an_1 - 3.82045010712647*an_2*n + 3.09282206434085*an_2 - 1.28805461099538*n - 8.51922087098079*sqrt(-an_1) - 4.40972922373835; error: 100000000      
model: -1.42624130107119*sqrt(an_2) + 1.43809833692629*an_2 - 4.67541465625198*n + 0.344263060106483*log(-3.88976608060581*an_1) + 4.71953365374275; error: 100000000      
model: 1.4210854715202e-14*an_1**2 + 3.9967166717729; error: 1.4748098274235496e+27
model: 4.2366110619696e-13*an_1**2/n + 3.58341203061382; error: 1.413679849045434e+27
model: -3.54038197727872*sqrt(an_1) - 0.730383775292186*an_1**2 + 1.97327066857378*n + 4.35373144719765*sqrt(-an_2*an_5) - 4.55864975524436; error: 100000000      
model: -3.11537143007505*an_1*n*exp(1.81169936836874*an_1**3) + 1.38535131776169; error: 1000000000.0   
model: 0.707848185926001 - 2.2662841675807*sqrt(-an_1); error: 1000000000.0   
model: 1.76336697699996*sqrt(-n) - 1.92890545706845*log(-1.82084099690526*an_2*an_3) - 3.63023157112981; error: 1000000000.0   
model: 1.29750263253825 + 2.5218306647898*exp(-0.495370968641263*n) + 0.0667004535978082*log(-0.993143997304263*an_1)/an_1; error: 1000000000.0   
model: -2.30008799958927*sqrt(an_1) + 4.8089409742897*an_1*an_2 - 2.18002004006045*an_1 + 4.0229516459287*an_2 - 3.02110429994303*n + 0.250825276163037*log(-2.38006131764392*n) + 0.015275632627435 + 4.09031124485559*exp(-1.18027489877638*n) - 3.29090162909342*exp(-1.93431062245778*an_1); error: 100000000      
model: 3.79948173698135*an_1 + 2.09343243110477; error: 1.0075496321136005e+22
model: 0.844753126490962*an_1 + 0.477428857802726*an_2*n - 0.341986328399813*exp(0.443079055031684*an_1*an_2*n) - 1.28399026270755; error: 1000000000.0   
model: 4.69821097887347*an_1**3 - 3.29637589231012*an_1*an_2**2 - 0.216687452205097*an_1 - 3.96446174128882*an_2 - 1.69044208398512*n**2 - 4.14603078821538; error: 100000000      
model: 2.97970285223509*an_1*an_15 + 1.06931614429861*an_1*n + 3.18535747775435*n - 4.03301037599575*sqrt(-n**2) + 4.12882556827123; error: 100000000      
model: 3.94757223057691 - 3.02356566248476*n/an_1; error: 3.7215522287315374e+28
model: 0.148092314953169*exp(1.31392971834299*n**2); error: 1000000000.0   
model: 0.000156837710471258*an_1*n**3 + 2.13866934112511*n - 2.75590764769975; error: 2.8599815554278404e+25
model: -0.145640692701278*an_1**2 - 2.42857361902924*an_11 + 2.72777243763193*log(-1.25453349542678*n) + 0.872461915290507; error: 1000000000.0   
model: 3.37791336298748*an_1**2*n + 2.09421283480375*an_1 - 0.926837967079885*exp(2.11579356295657*an_1) - 1.27733441810052; error: 1000000000.0   
model: 2.18059972571619*log(-2.38060318921872*n) + 2.11777533987997 - 3.5794200107584*exp(-0.230865301187797*an_2*an_4*n**3); error: 1000000000.0   
model: 3.02527620328991*an_1*n - 2.70828804922541*an_1 - 2.27647394166719*an_2 + 1.9975465522949*log(3.92702834750128*n) + 2.54145884129624; error: 100000000      
model: 1.4210854715202e-14*an_1**2 + 3.99860119024422*n + 3.9385605896443; error: 1.4748098274212794e+27
model: 2.01418790290626*sqrt(-an_3*n**3) + 3.8858432337762; error: 1000000000.0   
model: -0.0964445480445429/sqrt(-an_1); error: 1000000000.0   
model: -0.990444253782036*an_1**3 + 1.86940130457262*an_1 - 1.02823625285665*an_17 - 4.11816384786804*n + 3.47807256624857*log(-4.89918860869074*n) + 2.53801269886243; error: 100000000      
model: 0.00697144266893091*an_1*n + 3.59783085716457*an_1 + 1.50417172886566; error: 4.2834921231634944e+18
model: 5.50670620214078e-14*an_1*an_2 - 0.639370557750335; error: 1.4480942395782577e+27
model: 3.99913753926495*n + 2.09017327275194; error: 3.7215522287304805e+28
model: 0.131343206250789*an_1*n - 0.0642590036871651*n - 0.775745819995117; error: 3.2056388809691315e+24
model: 0.966169974830415*an_16*n + 2.01403052259278*exp(0.502419536424564*n)*log(-2.90346300465183*an_1) + 0.585018581656666; error: 1000000000.0   
model: -1.58846917495504*n**2 - 0.249903435105887*log(-2.45616745828556*an_2) + 1.99015627992042; error: 1000000000.0   
model: -3.98091346739094/log(-3.68223381058377*n); error: 1000000000.0   
model: 2.85842849742572*n**2 + 4.75540334578115*n - 3.15658987304062*exp(1.2761653722581*an_4) - 0.591786280053873*log(-4.6338341421946*an_1*an_3) + 2.79222080994661; error: 100000000      
model: -2.77842237928726*exp(0.349289158129981*an_2*n); error: 1000000000.0   
model: -3.40851596473701*an_1*n**2/an_3 + 2.81471552111435*an_2 + 2.89762577343156; error: 1000000000.0   
model: 4.0*an_3 + 3.85137143467898*n + 1.74723485640031; error: 3.1957105993096088e+28
model: 4.0*an_1 - 0.760478857771326*an_2 - 3.5112727491652; error: 8.963324012124376e+21
model: 2.85985180403901*an_1**2 + 1.04869832435531*log(1.22341600851927*an_1**2*an_27*n) - 1.66486915425633; error: 1000000000.0   
model: -0.672940444199789*n + 0.0155103009022031*exp(1.33473289009822*n) - 3.97526095709316; error: 8.159754072609084e+20
model: -3.54467930856284*an_1 + 3.68337327916675*an_2*n - 4.04696019883093*an_20 - 4.58085898635594*n - 3.80481108139794*exp(2.89128007348182*an_2*n**2) - 2.29126445021233 + 4.83467698318086*exp(-2.48027379331999*an_1*n) - 0.812610433199739*exp(-0.611032560985008*n); error: 100000000      
model: 3.59893017057098*n**2 - 4.43973540970371*n - 6.88940267812396*sqrt(-n**2) + 1.37977502911953 - 3.90662835113442*exp(-1.7354898169878*n**3); error: 100000000      
model: 0                             ; error: 3.7215522287315748e+28
model: -0.596746211406404*log(-2.15552155566762*n**2) - 2.7721741783208; error: 1000000000.0   
model: 3.79948168775585*an_1 - 1.49279163443621; error: 1.0075496328471534e+22
model: 2.0961010704923e-13*an_1*an_3 + 3.03193494987773; error: 1.444735969956243e+27
model: 2.56649127215179*an_1*an_2*an_3**2 + 1.78694105885565*an_1 + 1.72851428318593*n**2 - 1.49726330714274*sqrt(-an_1) - 4.18023303195588*exp(0.862810431823258*n) - 3.26179208101787; error: 100000000      
model: 2.32928467910209*an_1*n**2 - 1.81799406382637*an_1 - 0.854220290691038*log(2.68504782130026*an_2*n) + 1.11154321277943; error: 1000000000.0   
model: -3.21021323904843*an_1*an_2**2*n + 2.08895646141489*an_1 - 2.10417312908767*sqrt(n**2) - 0.757421224811456*log(-0.0936182664402685*n**2) + 1.26170345644554; error: 100000000      
model: -1.05948727795045*n - 4.12548831141704*sqrt(-an_1) - 0.0314215883238968*sqrt(-n**2) + 4.4352445766467*exp(1.95923379925648*n) + 2.60678721160091; error: 100000000      
model: 2.17760681998371*an_1*an_4 + 1.29012775386949*n + 0.376532509382836*sqrt(-an_2*n) + 1.64376470194479; error: 1000000000.0   

Total time consumed by now:248.8272915080015


Equation discovery for all (chosen) OEIS sequences took 248.8273115100019 secconds, i.e. 4.147121858500031 minutes or 0.0691186976416672 hours.

