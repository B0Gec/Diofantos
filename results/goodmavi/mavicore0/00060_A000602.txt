
Preprocessing sees only first 20 terms.
Sindy threshold: 0.1
Sindy will use max_order: 2

poly #0
             2                                                                                        2                                                                        2                                             2                       
- 2.0e-6⋅a(n)  + 1.0e-5⋅a(n)⋅a(n-1) - 4.0e-6⋅a(n)⋅a(n-2) + 6.0e-6⋅a(n)⋅n - 0.0006⋅a(n) - 1.0e-5⋅a(n-1)  - 1.0e-7⋅a(n-1)⋅a(n-2) - 1.0e-6⋅a(n-1)⋅n + 0.001⋅a(n-1) + 1.0e-5⋅a(n-2)  - 2.0e-7⋅a(n-2)⋅n - 0.0005⋅a(n-2) + 2.0e-6⋅n  - 0.0004⋅n + 0.001 = 0

poly #1
             2                                                                                        2                                                                         2                                            2                        
- 9.0e-7⋅a(n)  + 2.0e-6⋅a(n)⋅a(n-1) + 6.0e-6⋅a(n)⋅a(n-2) + 2.0e-5⋅a(n)⋅n - 0.0006⋅a(n) - 6.0e-7⋅a(n-1)  - 8.0e-6⋅a(n-1)⋅a(n-2) + 4.0e-6⋅a(n-1)⋅n + 0.0003⋅a(n-1) - 8.0e-6⋅a(n-2)  + 1.0e-6⋅a(n-2)⋅n + 0.001⋅a(n-2) + 1.0e-6⋅n  - 2.0e-6⋅n - 0.0006 = 0

poly #2
           2                                                                                        2                                                                         2                                             2                        
2.0e-7⋅a(n)  - 9.0e-7⋅a(n)⋅a(n-1) + 3.0e-7⋅a(n)⋅a(n-2) + 2.0e-6⋅a(n)⋅n + 9.0e-5⋅a(n) + 1.0e-6⋅a(n-1)  + 4.0e-7⋅a(n-1)⋅a(n-2) - 7.0e-6⋅a(n-1)⋅n - 5.0e-5⋅a(n-1) - 1.0e-6⋅a(n-2)  - 7.0e-6⋅a(n-2)⋅n - 0.0002⋅a(n-2) + 3.0e-5⋅n  - 0.0003⋅n + 0.0007 = 0

poly #3
           2                                                                                        2                                                                         2                                             2                        
1.0e-7⋅a(n)  - 9.0e-7⋅a(n)⋅a(n-1) + 5.0e-7⋅a(n)⋅a(n-2) + 2.0e-6⋅a(n)⋅n - 2.0e-5⋅a(n) + 1.0e-6⋅a(n-1)  - 2.0e-6⋅a(n-1)⋅a(n-2) - 2.0e-5⋅a(n-1)⋅n + 0.0002⋅a(n-1) + 8.0e-7⋅a(n-2)  + 2.0e-5⋅a(n-2)⋅n - 0.0003⋅a(n-2) + 4.0e-6⋅n  - 5.0e-5⋅n + 0.0002 = 0

poly #4
             2                                                                                        2                                                                         2                                             2                        
- 6.0e-8⋅a(n)  - 1.0e-7⋅a(n)⋅a(n-1) + 1.0e-6⋅a(n)⋅a(n-2) - 9.0e-6⋅a(n)⋅n + 7.0e-5⋅a(n) + 1.0e-6⋅a(n-1)  - 5.0e-6⋅a(n-1)⋅a(n-2) + 2.0e-5⋅a(n-1)⋅n - 0.0002⋅a(n-1) + 3.0e-6⋅a(n-2)  + 1.0e-5⋅a(n-2)⋅n - 0.0001⋅a(n-2) + 8.0e-6⋅n  - 7.0e-5⋅n + 0.0003 = 0

poly #5
             2                                                                                        2                                                                         2                                             2                        
- 6.0e-7⋅a(n)  + 6.0e-6⋅a(n)⋅a(n-1) - 6.0e-6⋅a(n)⋅a(n-2) - 1.0e-6⋅a(n)⋅n + 6.0e-6⋅a(n) - 1.0e-5⋅a(n-1)  + 3.0e-5⋅a(n-1)⋅a(n-2) + 2.0e-7⋅a(n-1)⋅n - 8.0e-6⋅a(n-1) - 1.0e-5⋅a(n-2)  + 7.0e-6⋅a(n-2)⋅n - 4.0e-5⋅a(n-2) + 1.0e-6⋅n  - 1.0e-5⋅n + 5.0e-5 = 0

While total time consumed by now, scale:61/164, seq_id:A000602, order:10 took:
 1.9 seconds, i.e. 0.03 minutes or 0.001 hours.
CORELIST: True, METHOD: Mavi, SINDy: True (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False
Library: n, max_order 10, threshold: 0.1

by degree: 2 and order: 2. 
A000602: 
             2                                                                                        2                                                                        2                                             2                       
- 2.0e-6⋅a(n)  + 1.0e-5⋅a(n)⋅a(n-1) - 4.0e-6⋅a(n)⋅a(n-2) + 6.0e-6⋅a(n)⋅n - 0.0006⋅a(n) - 1.0e-5⋅a(n-1)  - 1.0e-7⋅a(n-1)⋅a(n-2) - 1.0e-6⋅a(n-1)⋅n + 0.001⋅a(n-1) + 1.0e-5⋅a(n-2)  - 2.0e-7⋅a(n-2)⋅n - 0.0005⋅a(n-2) + 2.0e-6⋅n  - 0.0004⋅n + 0.001 = 0
truth: 
None

  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    
