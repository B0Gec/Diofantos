sicor-lin3
jobs failed (unsuccessful): [] 0
ids of jobs failed (unsuccessful): []

ids of jobs failed (unsuccessful): []
[] 0
[] 0
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
here i am
" A000032 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000035 .. h .. a(n) = 1 - a(n - 1)",
" A000045 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000079 .. h .. a(n) = 2*a(n - 1)",
" A000124 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 1",
" A000129 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A000204 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000217 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 1",
" A000225 .. h .. a(n) = 2*a(n - 1) + 1",
" A000244 .. h .. a(n) = 3*a(n - 1)",
" A000290 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 2",
" A000292 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1) + 1",
" A000302 .. h .. a(n) = 4*a(n - 1)",
" A000326 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 3",
" A000330 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1) + 2",
" A000578 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1) + 6",
" A000583 .. h .. a(n) = -a(n - 4) + 4*a(n - 3) - 6*a(n - 2) + 4*a(n - 1) + 24",
" A001045 .. h .. a(n) = 2*a(n - 2) + a(n - 1)",
" A001057 .. h .. a(n) = -a(n - 2) - 2*a(n - 1) + 1",
" A001333 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A001519 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A001906 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A002275 .. h .. a(n) = 10*a(n - 1) + 1",
" A002378 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 2",
" A002530 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002531 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002620 .. h .. a(n) = -a(n - 3) + a(n - 2) + a(n - 1) + 1",
" A004526 .. h .. a(n) = a(n - 2) + 1",
" A005408 .. h .. a(n) = a(n - 1) + 2",
" A005843 .. h .. a(n) = a(n - 1) + 2",
(0, 30, 0, 134, 0, 164, [], [164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt'], ['00000_A000001.txt', '00001_A000002.txt', '00002_A000005.txt', '00003_A000009.txt', '00004_A000010.txt', '00005_A000014.txt', '00006_A000019.txt', '00007_A000029.txt', '00008_A000031.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00015_A000048.txt', '00016_A000055.txt', '00017_A000058.txt', '00018_A000069.txt', '00020_A000081.txt', '00021_A000085.txt', '00022_A000088.txt', '00023_A000105.txt', '00024_A000108.txt', '00025_A000110.txt', '00026_A000111.txt', '00027_A000120.txt', '00028_A000123.txt', '00031_A000140.txt', '00032_A000142.txt', '00033_A000161.txt', '00034_A000166.txt', '00035_A000169.txt', '00036_A000182.txt', '00037_A000203.txt', '00040_A000219.txt', '00043_A000262.txt', '00044_A000272.txt', '00045_A000273.txt', '00049_A000311.txt', '00050_A000312.txt', '00053_A000364.txt', '00054_A000396.txt', '00055_A000521.txt', '00058_A000593.txt', '00059_A000594.txt', '00060_A000602.txt', '00061_A000612.txt', '00062_A000670.txt', '00063_A000688.txt', '00064_A000720.txt', '00065_A000793.txt', '00066_A000796.txt', '00067_A000798.txt', '00068_A000959.txt', '00069_A000961.txt', '00070_A000984.txt', '00071_A001003.txt', '00072_A001006.txt', '00073_A001034.txt', '00074_A001037.txt', '00076_A001055.txt', '00078_A001065.txt', '00079_A001097.txt', '00080_A001113.txt', '00081_A001147.txt', '00082_A001157.txt', '00083_A001190.txt', '00084_A001221.txt', '00085_A001222.txt', '00086_A001227.txt', '00087_A001285.txt', '00089_A001349.txt', '00090_A001358.txt', '00091_A001405.txt', '00092_A001462.txt', '00093_A001481.txt', '00094_A001511.txt', '00096_A001615.txt', '00097_A001699.txt', '00098_A001700.txt', '00099_A001764.txt', '00101_A001969.txt', '00102_A002033.txt', '00103_A002083.txt', '00104_A002110.txt', '00105_A002113.txt', '00107_A002322.txt', '00109_A002426.txt', '00110_A002487.txt', '00113_A002572.txt', '00115_A002654.txt', '00116_A002658.txt', '00117_A002808.txt', '00118_A003136.txt', '00119_A003418.txt', '00120_A003484.txt', '00121_A004011.txt', '00122_A004018.txt', '00124_A005036.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt', '00128_A005130.txt', '00129_A005230.txt', '00131_A005588.txt', '00132_A005811.txt', '00134_A006318.txt', '00135_A006530.txt', '00136_A006882.txt', '00137_A006894.txt', '00138_A007318.txt', '00139_A008275.txt', '00140_A008277.txt', '00141_A008279.txt', '00142_A008292.txt', '00143_A008683.txt', '00144_A010060.txt', '00145_A018252.txt', '00146_A020639.txt', '00147_A020652.txt', '00148_A020653.txt', '00149_A025487.txt', '00150_A027641.txt', '00151_A027642.txt', '00152_A035099.txt', '00153_A038566.txt', '00154_A038567.txt', '00155_A038568.txt', '00156_A038569.txt', '00157_A049310.txt', '00158_A055512.txt', '00159_A070939.txt', '00160_A074206.txt', '00161_A104725.txt', '00162_A226898.txt', '00163_A246655.txt'], [], [])
164

(0, 30, 0, 134, 0, 164, [], [164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
all files:164, sum:164, corrected sum: 164

Results: 
0
164
164
0

        0 = 0.0 % ... (id_oeis) ... successfully found equations that are identical to the recursive equations written in OEIS (hereinafter - OEIS equation)
       30 = 18.3 % ... (non_id) ... successfully found equations that are more complex than the OEIS equation 
        0 = 0.0 % ... (non_manual) ... successfully found equations that do not apply to test cases 
      134 = 81.7 % ... (fail) ... failure, no equation found. (but program finished smoothly, no runtime error)
        0 = 0.0 % ... (reconst_non_manual) ... fail in program, specifically: reconstructed oeis and wrong on test cases.
    ~~~~~~0 = 0.0 % ... (corrected_non_manual = non_manual ... reconst_non_manual) ... non_manuals taking bug in my code into the account.~~

      164 ... (id_oeis + non_id + corrected_non_manual + fail) = sum ... of all files
    
    
        0 = 0.0 % ... sequences with no ground truth -> missing jobs
        0 = 0.0 % ... sequences with false ground truth -> missing jobs
        0 = 0.0 % ... sequences with no or false ground truth -> all missing jobs by default
      164 ... all sequences in our dataset
    
        0 = 0.0 % ... runtime errors = jobs failed
      134 = 81.7 % ... all fails  <--- (look this) ---
      164 ... all considered sequences, i.e. in our dataset - ignored
    
    _______________________________________________________
    164 ... (id_oeis + non_id + corrected_non_manual + all_fails) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored + jobs_fail) ... under the line check if it sums up
    
       30 = 18.3 % - official success (id_oeis + non_id)
    
      164 = avg is best ... I might be wrong ... 
    
    time complexity: legit from 9:31 (2023-9-19) to 9:42 (29 reconstructions 22 files to ?, i.e. ? mins) to 9:56
    
    
    
    ==========================================================

    \newcommand{\allSeqs}{164}
    \newcommand{\isOeis}{0}
    \newcommand{\nonId}{30}
    \newcommand{\nonMan}{0}
    \newcommand{\edFail}{134}
    \newcommand{\jobFail}{0}

    \newcommand{\BBallSeqs}{164}
    \newcommand{\BBisOeis}{0}
    \newcommand{\BBnonId}{30}
    \newcommand{\BBnonMan}{0}
    \newcommand{\BBedFail}{134}
    \newcommand{\BBjobFail}{0}

    \FPeval{\BBok}{           clip(\BBisOeis+\BBnonId)}
    \FPeval{\BBnotOeis}{      clip(\BBnonMan+\BBnonId)}
    \FPeval{\BBnotIsFound}{   clip(\BBedFail+\BBjobFail)}
    \FPeval{\BBisFound}{      clip(\BBisOeis+\BBnotOeis)}
    \FPeval{\BBallSeqsc}{     clip(\BBisFound+\BBnotIsFound)}
    
    \FPeval{\percBBIsOeis}{       round(100 * \BBisOeis/\BBallSeqs:2)}
    \FPeval{\percBBNonId}{        round(100 * \BBnonId/\BBallSeqs:2)}
    \FPeval{\percBBNonMan}{       round(100 * \BBnonMan/\BBallSeqs:2)}
    \FPeval{\percBBNotIsFound}{   round(100 * \BBnotIsFound/\BBallSeqs:2)}

    
        \begin{table}[h]
    \caption{Table describing the sicor-lin3 results of novel Diofantos method experiments so far.}
    \label{tab:dio.cores}
       \renewcommand{\arraystretch}{1.5} \begin{center}
    \begin{tabular}{ll|cc|c} \toprule \centering
    &  \textbf{outputed} &  & \textbf{not\_outputed} &  \\
     \textbf{identical} & \textbf{nonidentical} & \textbf{error free (ed\_fail)} 
    & \textbf{runtime error (jobs\_fail)} & $\Sigma$ \\
        \midrule
        ? (\BBisOeis) & \BBnonId  &  \BBedFail & \BBjobFail &  \BBallSeqsc \\
        \bottomrule \end{tabular} \end{center}
    \end{table}

\begin{figure}
    \centering
\Tree[.$\BBallSeqs$ [.outputed [.$\BBisOeis$ ] 
                    [.$\BBnonId$ 
                    ] ] 
               [.not\_outputed 
                    [.$\BBedFail$ ]
                    [.$\BBjobFail$ ]
                    ]] 
    \caption{Tree explaining the process of grouping sequences into disjoint bins with tangible numbers for sicor-lin3.}
    \label{fig:explain_numbersBB}
\end{figure}

\begin{figure}
    \begin{tikzpicture}
    % \pie[text=legend,
        \pie[color={ipsscblue, ipsscred, ipsscorange, ipsscyellow}] 
        {   \percBBIsOeis/identical (\BBisOeis),
            \percBBNonId/ nonidentical (\BBnonId),
            % \percBBNonMan/invalid (\BBnonMan),
            \percBBNotIsFound/no output (\BBnotIsFound) 
            }
    \end{tikzpicture}

    \caption{Summary of (fresh) results with pie chart for sicor-lin3.}
    \label{fig:explain_treeBB}
\end{figure}


6
first 6 bugs: []
0
job bins (task_id= 0, 1, ... 34): [164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
zipped job bins (task_id= 0, 1, ... 34): [(0, 164), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0)]
check bins: 164 = 164 ?
0 164
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
first 35 non_ids: ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt']
task_ids of non_ids: 9,10,14,19,29,30,38,39,41,42,46,47,48,51,52,56,57,75,77,88,95,100,106,108,111,112,114,123,130,133
30
first 100 non_manuals: []
first 100 ed_fails: ['00000_A000001.txt', '00001_A000002.txt', '00002_A000005.txt', '00003_A000009.txt', '00004_A000010.txt', '00005_A000014.txt', '00006_A000019.txt', '00007_A000029.txt', '00008_A000031.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00015_A000048.txt', '00016_A000055.txt', '00017_A000058.txt', '00018_A000069.txt', '00020_A000081.txt', '00021_A000085.txt', '00022_A000088.txt', '00023_A000105.txt', '00024_A000108.txt', '00025_A000110.txt', '00026_A000111.txt', '00027_A000120.txt', '00028_A000123.txt', '00031_A000140.txt', '00032_A000142.txt', '00033_A000161.txt', '00034_A000166.txt', '00035_A000169.txt', '00036_A000182.txt', '00037_A000203.txt', '00040_A000219.txt', '00043_A000262.txt', '00044_A000272.txt', '00045_A000273.txt', '00049_A000311.txt', '00050_A000312.txt', '00053_A000364.txt', '00054_A000396.txt', '00055_A000521.txt', '00058_A000593.txt', '00059_A000594.txt', '00060_A000602.txt', '00061_A000612.txt', '00062_A000670.txt', '00063_A000688.txt', '00064_A000720.txt', '00065_A000793.txt', '00066_A000796.txt', '00067_A000798.txt', '00068_A000959.txt', '00069_A000961.txt', '00070_A000984.txt', '00071_A001003.txt', '00072_A001006.txt', '00073_A001034.txt', '00074_A001037.txt', '00076_A001055.txt', '00078_A001065.txt', '00079_A001097.txt', '00080_A001113.txt', '00081_A001147.txt', '00082_A001157.txt', '00083_A001190.txt', '00084_A001221.txt', '00085_A001222.txt', '00086_A001227.txt', '00087_A001285.txt', '00089_A001349.txt', '00090_A001358.txt', '00091_A001405.txt', '00092_A001462.txt', '00093_A001481.txt', '00094_A001511.txt', '00096_A001615.txt', '00097_A001699.txt', '00098_A001700.txt', '00099_A001764.txt', '00101_A001969.txt', '00102_A002033.txt', '00103_A002083.txt', '00104_A002110.txt', '00105_A002113.txt', '00107_A002322.txt', '00109_A002426.txt', '00110_A002487.txt', '00113_A002572.txt', '00115_A002654.txt', '00116_A002658.txt', '00117_A002808.txt', '00118_A003136.txt', '00119_A003418.txt', '00120_A003484.txt', '00121_A004011.txt', '00122_A004018.txt', '00124_A005036.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt']
134
first 100 true configs: []
0
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00061_A000612.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
34 35
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00061_A000612.txt']
[]
['00061_A000612.txt']
    Unnamed: 0                      Name  ... Diofantos [disco., outputed] SINDy
0      A000001         groups of order n  ...                          NaN   NaN
1      A000002                 Kolakoski  ...                            ?     ?
2      A000005   Number of divisors of n  ...                          NaN   NaN
3      A000009  Expansion of product ...  ...                          NaN   NaN
4      A000010    Euler totient function  ...                          NaN   NaN
..         ...                       ...  ...                          ...   ...
162    A226898   Hooley's Delta function  ...                          NaN   NaN
163    A246655              Prime powers  ...                          NaN   NaN
164        NaN                       NaN  ...                          NaN   NaN
165        NaN                       NaN  ...                          NaN   NaN
166        NaN                       NaN  ...                          NaN   NaN

[167 rows x 8 columns]
Index(['Unnamed: 0', 'Name', 'URL', 'length (# available seq members leq 200)',
       'cathegory (trivial [T]/exists [E]/hard [H])', 'ground truth',
       'Diofantos [disco., outputed]', 'SINDy'],
      dtype='object')
yes, a(n) = -a(n - 4) + 4*a(n - 2) A002531
cat hard <class 'str'>
discos [(9, 'A000032', 'yes, a(n) = a(n - 2) + a(n - 1)'), (10, 'A000035', 'yes, a(n) = 1 - a(n - 1) a(n) = a(n-2)'), (14, 'A000045', 'yes, a(n) = a(n - 2) + a(n - 1)'), (19, 'A000079', 'yes, a(n) = 2*a(n - 1)'), (29, 'A000124', 'yes, a(n) = a(n - 2) + 2*a(n - 1) \na(n) =  a(n - 3) - 3*a(n - 2) + 3*a(n - 1)'), (30, 'A000129', 'yes, a(n) = a(n - 2) + 2*a(n - 1)'), (38, 'A000204', 'yes, a(n) = a(n - 2) + a(n - 1)'), (39, 'A000217', 'yes, checked (a(n) -a(n-1), also a124),  \na(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1)'), (41, 'A000225', 'yes, a(n) = 2*a(n - 1) + 1 a(n) \na(n) = -2*a(n - 2) + 3*a(n - 1)'), (42, 'A000244', 'yes, a(n) = 3*a(n - 1)'), (46, 'A000290', 'yes, a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1)'), (48, 'A000302', 'yes, a(n) = 4*a(n - 1)'), (51, 'A000326', 'yes, a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1)'), (52, 'A000330', 'yes, checked (a(n) -a(n-1), also a124), \na(n) = -a(n - 4) + 4*a(n - 3) - 6*a(n - 2) + 4*a(n - 1)'), (56, 'A000578', 'yes,  a(n) = -a(n - 4) + 4*a(n - 3) - 6*a(n - 2) + 4*a(n - 1)'), (57, 'A000583', 'yes, checked (a(n) -a(n-1)), \na(n) = a(n - 5) - 5*a(n - 4) + 10*a(n - 3) - 10*a(n - 2) + 5*a(n - 1)'), (75, 'A001045', 'yes,  a(n) = 2*a(n - 2) + a(n - 1)'), (77, 'A001057', 'yes!, a(n) = a(n - 3) + a(n - 2) - a(n - 1)'), (88, 'A001333', 'yes, a(n) = a(n - 2) + 2*a(n - 1)'), (95, 'A001519', 'yes, a(n) = -a(n - 2) + 3*a(n - 1)'), (100, 'A001906', 'yes, a(n) = -a(n - 2) + 3*a(n - 1)'), (106, 'A002275', 'yes, a(n) = -10*a(n - 2) + 11*a(n - 1)'), (108, 'A002378', 'yes, checked (a(n)-a(n-1) for a(n) = a(n-1) + 2n and repeat once), \na(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1)'), (111, 'A002530', 'yes, a(n) = -a(n - 4) + 4*a(n - 2)'), (112, 'A002531', 'yes, a(n) = -a(n - 4) + 4*a(n - 2)'), (114, 'A002620', 'yes, a(n) = a(n - 4) - 2*a(n - 3) + 2*a(n - 1)'), (123, 'A004526', 'yes, a(n) = -a(n - 4) + 2*a(n - 2)'), (130, 'A005408', 'yes,  a(n) = -a(n - 2) + 2*a(n - 1)'), (133, 'A005843', 'yes, a(n) = -a(n - 2) + 2*a(n - 1)')]
4 24 1
['A000032', 'A000035', 'A000045', 'A000079', 'A000124', 'A000129', 'A000204', 'A000217', 'A000225', 'A000244', 'A000290', 'A000302', 'A000326', 'A000330', 'A000578', 'A000583', 'A001045', 'A001057', 'A001333', 'A001519', 'A001906', 'A002275', 'A002378', 'A002530', 'A002531', 'A002620', 'A004526', 'A005408', 'A005843']
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685, 37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585, 420196140727489673, 679891637638612258, 1100087778366101931, 1779979416004714189, 2880067194370816120, 4660046610375530309, 7540113804746346429, 12200160415121876738, 19740274219868223167, 31940434634990099905, 51680708854858323072, 83621143489848422977, 135301852344706746049, 218922995834555169026, 354224848179261915075, 573147844013817084101, 927372692193078999176, 1500520536206896083277, 2427893228399975082453, 3928413764606871165730, 6356306993006846248183, 10284720757613717413913, 16641027750620563662096, 26925748508234281076009, 43566776258854844738105, 70492524767089125814114, 114059301025943970552219, 184551825793033096366333, 298611126818977066918552, 483162952612010163284885, 781774079430987230203437, 1264937032042997393488322, 2046711111473984623691759, 3311648143516982017180081, 5358359254990966640871840, 8670007398507948658051921, 14028366653498915298923761, 22698374052006863956975682, 36726740705505779255899443, 59425114757512643212875125, 96151855463018422468774568, 155576970220531065681649693, 251728825683549488150424261, 407305795904080553832073954, 659034621587630041982498215, 1066340417491710595814572169, 1725375039079340637797070384, 2791715456571051233611642553, 4517090495650391871408712937, 7308805952221443105020355490, 11825896447871834976429068427, 19134702400093278081449423917, 30960598847965113057878492344, 50095301248058391139327916261, 81055900096023504197206408605, 131151201344081895336534324866, 212207101440105399533740733471, 343358302784187294870275058337, 555565404224292694404015791808, 898923707008479989274290850145, 1454489111232772683678306641953, 2353412818241252672952597492098, 3807901929474025356630904134051, 6161314747715278029583501626149, 9969216677189303386214405760200, 16130531424904581415797907386349, 26099748102093884802012313146549, 42230279526998466217810220532898, 68330027629092351019822533679447, 110560307156090817237632754212345, 178890334785183168257455287891792, 289450641941273985495088042104137, 468340976726457153752543329995929, 757791618667731139247631372100066, 1226132595394188293000174702095995, 1983924214061919432247806074196061, 3210056809456107725247980776292056, 5193981023518027157495786850488117, 8404037832974134882743767626780173, 13598018856492162040239554477268290, 22002056689466296922983322104048463, 35600075545958458963222876581316753, 57602132235424755886206198685365216, 93202207781383214849429075266681969, 150804340016807970735635273952047185, 244006547798191185585064349218729154, 394810887814999156320699623170776339, 638817435613190341905763972389505493, 1033628323428189498226463595560281832, 1672445759041379840132227567949787325, 2706074082469569338358691163510069157, 4378519841510949178490918731459856482, 7084593923980518516849609894969925639, 11463113765491467695340528626429782121, 18547707689471986212190138521399707760, 30010821454963453907530667147829489881, 48558529144435440119720805669229197641, 78569350599398894027251472817058687522, 127127879743834334146972278486287885163, 205697230343233228174223751303346572685, 332825110087067562321196029789634457848, 538522340430300790495419781092981030533, 871347450517368352816615810882615488381, 1409869790947669143312035591975596518914, 2281217241465037496128651402858212007295, 3691087032412706639440686994833808526209, 5972304273877744135569338397692020533504, 9663391306290450775010025392525829059713, 15635695580168194910579363790217849593217, 25299086886458645685589389182743678652930, 40934782466626840596168752972961528246147, 66233869353085486281758142155705206899077, 107168651819712326877926895128666735145224, 173402521172797813159685037284371942044301]
5  = c0 . 5^3 + c1 . 3   + c2 . 2 + c_3 . 2 + c4 . 0
8  = c0 . 6^3 + c1 . 5   + c2 . 6 + c_3 . 3 + c4 . 6
13 = c0 . 7^3 + c1 . 8   + c2 . 15 + c_3 . 5 + c4 . 7
21 = c0 . 8^3 + c1 . 13  + c2 . 40 + c_3 . 8 + c4 . 32
8  & = c_0 \cdot 6^3 + c_1 \cdot 5   + c_2 \cdot 6   + c_3 \cdot 3 + c_4 \cdot 6\cdot1  ^2 \\ 
13 & = c_0 \cdot 7^3 + c_1 \cdot 8   + c_2 \cdot 15  + c_3 \cdot 5 + c_4 \cdot 7\cdot1  ^2 \\ 
21 & = c_0 \cdot 8^3 + c_1 \cdot 13  + c_2 \cdot 40  + c_3 \cdot 8 + c_4 \cdot 8\cdot2  ^2 \\ 
377 & = c_0 \cdot 14^3 + c_1 \cdot 233 + c_2 \cdot 12816 + c_3 \cdot 144 + c_4 \cdot 14\cdot34 ^2 \\ 
[5, 8, 13, 21, 34, 55, 89, 144, 233, 377] 144 89 12816
6 ^3 &  5   &  6   &  3 &  6\cdot1  ^2 \\ 
7 ^3 &  8   &  15  &  5 &  7\cdot1  ^2 \\ 
8 ^3 &  13  &  40  &  8 &  8\cdot2  ^2 \\ 
14^3 &  233 &  12816 &  144 &  14\cdot34 ^2 \\ 
