dicor-comb
jobs failed (unsuccessful): ['A000001', 'A000005', 'A000009', 'A000010', 'A000014', 'A000019', 'A000029', 'A000031', 'A000040', 'A000041'] 125
ids of jobs failed (unsuccessful): [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 49, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163]
0,2,3,4,5,6,7,8,11,12,13,15,16,18,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,40,43,44,45,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,78,79,80,81,82,83,84,85,86,89,90,91,92,93,96,98,99,101,102,103,104,105,107,109,110,113,115,116,117,118,119,121,122,124,125,126,127,128,129,131,132,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,161,162,163
ids of jobs failed (unsuccessful): [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 49, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163]
[('00000', 'A000001'), ('00002', 'A000005'), ('00003', 'A000009'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00011', 'A000040'), ('00012', 'A000041')] 125
[('00000', 'A000001'), ('00002', 'A000005'), ('00003', 'A000009'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00011', 'A000040'), ('00012', 'A000041'), ('00013', 'A000043'), ('00015', 'A000048'), ('00016', 'A000055'), ('00018', 'A000069'), ('00020', 'A000081'), ('00021', 'A000085'), ('00022', 'A000088'), ('00023', 'A000105'), ('00024', 'A000108'), ('00025', 'A000110'), ('00026', 'A000111'), ('00027', 'A000120'), ('00028', 'A000123'), ('00031', 'A000140'), ('00032', 'A000142'), ('00033', 'A000161'), ('00034', 'A000166'), ('00035', 'A000169'), ('00036', 'A000182'), ('00037', 'A000203'), ('00040', 'A000219'), ('00043', 'A000262'), ('00044', 'A000272'), ('00045', 'A000273'), ('00049', 'A000311'), ('00050', 'A000312'), ('00053', 'A000364'), ('00054', 'A000396'), ('00055', 'A000521'), ('00057', 'A000583'), ('00058', 'A000593'), ('00059', 'A000594'), ('00060', 'A000602'), ('00061', 'A000612'), ('00062', 'A000670'), ('00063', 'A000688'), ('00064', 'A000720'), ('00065', 'A000793'), ('00066', 'A000796'), ('00068', 'A000959'), ('00069', 'A000961'), ('00070', 'A000984'), ('00071', 'A001003'), ('00072', 'A001006'), ('00073', 'A001034'), ('00074', 'A001037'), ('00076', 'A001055'), ('00078', 'A001065'), ('00079', 'A001097'), ('00080', 'A001113'), ('00081', 'A001147'), ('00082', 'A001157'), ('00083', 'A001190'), ('00084', 'A001221'), ('00085', 'A001222'), ('00086', 'A001227'), ('00089', 'A001349'), ('00090', 'A001358'), ('00091', 'A001405'), ('00092', 'A001462'), ('00093', 'A001481'), ('00096', 'A001615'), ('00098', 'A001700'), ('00099', 'A001764'), ('00101', 'A001969'), ('00102', 'A002033'), ('00103', 'A002083'), ('00104', 'A002110'), ('00105', 'A002113'), ('00107', 'A002322'), ('00109', 'A002426'), ('00110', 'A002487'), ('00113', 'A002572'), ('00115', 'A002654'), ('00116', 'A002658'), ('00117', 'A002808'), ('00118', 'A003136'), ('00119', 'A003418'), ('00121', 'A004011'), ('00122', 'A004018'), ('00124', 'A005036'), ('00125', 'A005100'), ('00126', 'A005101'), ('00127', 'A005117'), ('00128', 'A005130'), ('00129', 'A005230'), ('00131', 'A005588'), ('00132', 'A005811'), ('00134', 'A006318'), ('00135', 'A006530'), ('00136', 'A006882'), ('00137', 'A006894'), ('00138', 'A007318'), ('00139', 'A008275'), ('00140', 'A008277'), ('00141', 'A008279'), ('00142', 'A008292'), ('00143', 'A008683'), ('00145', 'A018252'), ('00146', 'A020639'), ('00147', 'A020652'), ('00148', 'A020653'), ('00149', 'A025487'), ('00150', 'A027641'), ('00151', 'A027642'), ('00152', 'A035099'), ('00153', 'A038566'), ('00154', 'A038567'), ('00155', 'A038568'), ('00156', 'A038569'), ('00157', 'A049310'), ('00160', 'A074206'), ('00161', 'A104725'), ('00162', 'A226898'), ('00163', 'A246655')] 125
0 125
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
[125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
here i am
" A000032 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000035 .. h .. a(n) = 1 - a(n - 1)",
" A000045 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000058 .. h .. a(n) = a(n - 1)**2 - a(n - 1) + 1",
" A000079 .. h .. a(n) = 2*a(n - 1)",
" A000124 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 1",
" A000129 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A000204 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000217 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 1",
" A000225 .. h .. a(n) = 2*a(n - 1) + 1",
" A000244 .. h .. a(n) = 3*a(n - 1)",
" A000290 .. h .. a(n) = n**2",
" A000292 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1) + 1",
" A000302 .. h .. a(n) = 4*a(n - 1)",
" A000326 .. h .. a(n) = -a(n - 2) + 2*a(n - 1) + 3",
" A000330 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1) + 2",
" A000578 .. h .. a(n) = n**3",
" A000798 .. h .. a(n) = 36706718060941852082056164*a(n - 4)**3 + 164191407949659439614295141*a(n - 4)**2*a(n - 3) - 62563673918957175202297036*a(n - 4)**2*a(n - 2) + 29409601555571712361356384*a(n - 4)**2*a(n - 1) + 8250031086223133071073155*a(n - 4)**2 - 43239802658245455571463982*a(n - 4)*a(n - 3)**2 + 83944618082808191924654785*a(n - 4)*a(n - 3)*a(n - 2) + 65959411381522644219727725*a(n - 4)*a(n - 3)*a(n - 1) - 39251263714390184680279358*a(n - 4)*a(n - 3) - 31592266215336080205370499*a(n - 4)*a(n - 2)**2 - 33036587673452475130051436*a(n - 4)*a(n - 2)*a(n - 1) - 50516545883360368728827677*a(n - 4)*a(n - 2) - 261663707409877013264769*a(n - 4)*a(n - 1)**2 + 55875879756512335987805581*a(n - 4)*a(n - 1) - 77169469421252471858912514*a(n - 4) - 69293967484903517614366053*a(n - 3)**3 - 29251362819328916284335930*a(n - 3)**2*a(n - 2) + 71837010224233181588195889*a(n - 3)**2*a(n - 1) + 121443865016118950472958169*a(n - 3)**2 - 32220814774872840377704884*a(n - 3)*a(n - 2)**2 + 1303943621533460610666645*a(n - 3)*a(n - 2)*a(n - 1) - 128709119277876775872132213*a(n - 3)*a(n - 2) - 151134278662692418205*a(n - 3)*a(n - 1)**2 - 7137891344668184688725081*a(n - 3)*a(n - 1) - 77910351397962351499955823*a(n - 3) - 1108907649961422567290295*a(n - 2)**3 + 202831962355426188555*a(n - 2)**2*a(n - 1) - 48861139697317145926048960*a(n - 2)**2 - 582929238523854*a(n - 2)*a(n - 1)**2 + 3924562277001832261990809*a(n - 2)*a(n - 1) + 69569719697496477363090108*a(n - 2) + 60986529690*a(n - 1)**3 - 91361677163343240158196*a(n - 1)**2 - 14564238491240107372878392*a(n - 1) + 2787316436397440347846410",
" A001045 .. h .. a(n) = 2*a(n - 2) + a(n - 1)",
" A001057 .. h .. a(n) = -a(n - 2) - 2*a(n - 1) + 1",
" A001333 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A001519 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A001699 .. h .. a(n) = -a(n - 2)**3 + 2*a(n - 2)**2 + 3*a(n - 2)*a(n - 1) - 4*a(n - 2) + a(n - 1)**2 + 2*a(n - 1)",
" A001906 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A002275 .. h .. a(n) = 10*a(n - 1) + 1",
" A002378 .. h .. a(n) = n**2 + n",
" A002530 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002531 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002620 .. h .. a(n) = -a(n - 3) + a(n - 2) + a(n - 1) + 1",
" A004526 .. h .. a(n) = a(n - 2) + 1",
" A005408 .. h .. a(n) = a(n - 1) + 2",
" A005843 .. h .. a(n) = 2*n",
" A055512 .. h .. a(n) = -1105472571399536518*a(n - 6)**2 + 3588308353318391503*a(n - 6)*a(n - 5) + 2224863515319969013*a(n - 6)*a(n - 4) - 1694872272832474807*a(n - 6)*a(n - 3) + 591752402704155245*a(n - 6)*a(n - 2) - 27317905897404479*a(n - 6)*a(n - 1) + 596594399922541876*a(n - 6) - 1265421825004137781*a(n - 5)**2 - 1007454242957500909*a(n - 5)*a(n - 4) + 1029172703958521086*a(n - 5)*a(n - 3) + 238195649422380681*a(n - 5)*a(n - 2) - 34707715623429843*a(n - 5)*a(n - 1) - 4377029257165658714*a(n - 5) - 1634489814979823823*a(n - 4)**2 + 751661964429027137*a(n - 4)*a(n - 3) + 244422938141221588*a(n - 4)*a(n - 2) + 7047688110885070*a(n - 4)*a(n - 1) + 1450732398362333246*a(n - 4) - 405985400962523687*a(n - 3)**2 - 9102581589174365*a(n - 3)*a(n - 2) + 71567114840199*a(n - 3)*a(n - 1) - 4244036423426031890*a(n - 3) - 73380820839107*a(n - 2)**2 + 207080477*a(n - 2)*a(n - 1) + 367891146668910673*a(n - 2) - 65861*a(n - 1)**2 - 12494149647337042*a(n - 1) + 2957334332811867422",
(0, 33, 0, 6, 0, 39, [], [39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt'], ['00001_A000002.txt', '00087_A001285.txt', '00094_A001511.txt', '00120_A003484.txt', '00144_A010060.txt', '00159_A070939.txt'], [], [])
39

(0, 33, 0, 6, 0, 39, [], [39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
all files:39, sum:39, corrected sum: 39

Results: 
0
164
164
125

        0 = 0.0 % ... (id_oeis) ... successfully found equations that are identical to the recursive equations written in OEIS (hereinafter - OEIS equation)
       33 = 20.1 % ... (non_id) ... successfully found equations that are more complex than the OEIS equation 
        0 = 0.0 % ... (non_manual) ... successfully found equations that do not apply to test cases 
        6 = 3.66 % ... (fail) ... failure, no equation found. (but program finished smoothly, no runtime error)
        0 = 0.0 % ... (reconst_non_manual) ... fail in program, specifically: reconstructed oeis and wrong on test cases.
    ~~~~~~0 = 0.0 % ... (corrected_non_manual = non_manual ... reconst_non_manual) ... non_manuals taking bug in my code into the account.~~

       39 ... (id_oeis + non_id + corrected_non_manual + fail) = sum ... of all files
    
    
        0 = 0.0 % ... sequences with no ground truth -> missing jobs
        0 = 0.0 % ... sequences with false ground truth -> missing jobs
        0 = 0.0 % ... sequences with no or false ground truth -> all missing jobs by default
      164 ... all sequences in our dataset
    
      125 = 76.2 % ... runtime errors = jobs failed
      131 = 79.9 % ... all fails  <--- (look this) ---
      164 ... all considered sequences, i.e. in our dataset - ignored
    
    _______________________________________________________
    164 ... (id_oeis + non_id + corrected_non_manual + all_fails) ... under the line check if it sums up
    39 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored + jobs_fail) ... under the line check if it sums up
    
       33 = 20.1 % - official success (id_oeis + non_id)
    
       39 = avg is best ... I might be wrong ... 
    
    time complexity: unknomn
    
    
    
    ==========================================================

    \newcommand{\allSeqs}{164}
    \newcommand{\isOeis}{0}
    \newcommand{\nonId}{33}
    \newcommand{\nonMan}{0}
    \newcommand{\edFail}{6}
    \newcommand{\jobFail}{125}

    \newcommand{\HHallSeqs}{164}
    \newcommand{\HHisOeis}{0}
    \newcommand{\HHnonId}{33}
    \newcommand{\HHnonMan}{0}
    \newcommand{\HHedFail}{6}
    \newcommand{\HHjobFail}{125}

    \FPeval{\HHok}{           clip(\HHisOeis+\HHnonId)}
    \FPeval{\HHnotOeis}{      clip(\HHnonMan+\HHnonId)}
    \FPeval{\HHnotIsFound}{   clip(\HHedFail+\HHjobFail)}
    \FPeval{\HHisFound}{      clip(\HHisOeis+\HHnotOeis)}
    \FPeval{\HHallSeqsc}{     clip(\HHisFound+\HHnotIsFound)}
    
    \FPeval{\percHHIsOeis}{       round(100 * \HHisOeis/\HHallSeqs:2)}
    \FPeval{\percHHNonId}{        round(100 * \HHnonId/\HHallSeqs:2)}
    \FPeval{\percHHNonMan}{       round(100 * \HHnonMan/\HHallSeqs:2)}
    \FPeval{\percHHNotIsFound}{   round(100 * \HHnotIsFound/\HHallSeqs:2)}

    
        \begin{table}[h]
    \caption{Table describing the dicor-comb results of novel Diofantos method experiments so far.}
    \label{tab:dio.cores}
       \renewcommand{\arraystretch}{1.5} \begin{center}
    \begin{tabular}{ll|cc|c} \toprule \centering
    &  \textbf{outputed} &  & \textbf{not\_outputed} &  \\
     \textbf{identical} & \textbf{nonidentical} & \textbf{error free (ed\_fail)} 
    & \textbf{runtime error (jobs\_fail)} & $\Sigma$ \\
        \midrule
        ? (\HHisOeis) & \HHnonId  &  \HHedFail & \HHjobFail &  \HHallSeqsc \\
        \bottomrule \end{tabular} \end{center}
    \end{table}

\begin{figure}
    \centering
\Tree[.$\HHallSeqs$ [.outputed [.$\HHisOeis$ ] 
                    [.$\HHnonId$ 
                    ] ] 
               [.not\_outputed 
                    [.$\HHedFail$ ]
                    [.$\HHjobFail$ ]
                    ]] 
    \caption{Tree explaining the process of grouping sequences into disjoint bins with tangible numbers for dicor-comb.}
    \label{fig:explain_numbersHH}
\end{figure}

\begin{figure}
    \begin{tikzpicture}
    % \pie[text=legend,
        \pie[color={ipsscblue, ipsscred, ipsscorange, ipsscyellow}] 
        {   \percHHIsOeis/identical (\HHisOeis),
            \percHHNonId/ nonidentical (\HHnonId),
            % \percHHNonMan/invalid (\HHnonMan),
            \percHHNotIsFound/no output (\HHnotIsFound) 
            }
    \end{tikzpicture}

    \caption{Summary of (fresh) results with pie chart for dicor-comb.}
    \label{fig:explain_treeHH}
\end{figure}


6
first 6 bugs: []
0
job bins (task_id= 0, 1, ... 34): [39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
zipped job bins (task_id= 0, 1, ... 34): [(0, 39), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0)]
check bins: 39 = 39 ?
0 39
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
first 35 non_ids: ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
33
first 100 non_manuals: []
first 100 ed_fails: ['00001_A000002.txt', '00087_A001285.txt', '00094_A001511.txt', '00120_A003484.txt', '00144_A010060.txt', '00159_A070939.txt']
6
first 100 true configs: []
0
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00061_A000612.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
34 35
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00061_A000612.txt']
[]
['00061_A000612.txt']
