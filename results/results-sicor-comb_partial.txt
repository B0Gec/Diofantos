sicor-comb
task_ids of jobs successful: [9, 10, 14, 17, 19, 29, 30, 39, 41, 42, 46, 47, 48, 51, 52, 67, 77, 88, 95, 97, 100, 106, 114, 130, 133, 158]
9,10,14,17,19,29,30,39,41,42,46,47,48,51,52,67,77,88,95,97,100,106,114,130,133,158
jobs failed (unsuccessful): ['A000001', 'A000002', 'A000005', 'A000009', 'A000010', 'A000014', 'A000019', 'A000029', 'A000031', 'A000040'] 138
ids of jobs failed (unsuccessful): [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163]
0,1,2,3,4,5,6,7,8,11,12,13,15,16,18,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,40,43,44,45,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,98,99,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163
ids of jobs failed (unsuccessful): [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163]
[('00000', 'A000001'), ('00001', 'A000002'), ('00002', 'A000005'), ('00003', 'A000009'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00011', 'A000040')] 138
[('00000', 'A000001'), ('00001', 'A000002'), ('00002', 'A000005'), ('00003', 'A000009'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00011', 'A000040'), ('00012', 'A000041'), ('00013', 'A000043'), ('00015', 'A000048'), ('00016', 'A000055'), ('00018', 'A000069'), ('00020', 'A000081'), ('00021', 'A000085'), ('00022', 'A000088'), ('00023', 'A000105'), ('00024', 'A000108'), ('00025', 'A000110'), ('00026', 'A000111'), ('00027', 'A000120'), ('00028', 'A000123'), ('00031', 'A000140'), ('00032', 'A000142'), ('00033', 'A000161'), ('00034', 'A000166'), ('00035', 'A000169'), ('00036', 'A000182'), ('00037', 'A000203'), ('00038', 'A000204'), ('00040', 'A000219'), ('00043', 'A000262'), ('00044', 'A000272'), ('00045', 'A000273'), ('00049', 'A000311'), ('00050', 'A000312'), ('00053', 'A000364'), ('00054', 'A000396'), ('00055', 'A000521'), ('00056', 'A000578'), ('00057', 'A000583'), ('00058', 'A000593'), ('00059', 'A000594'), ('00060', 'A000602'), ('00061', 'A000612'), ('00062', 'A000670'), ('00063', 'A000688'), ('00064', 'A000720'), ('00065', 'A000793'), ('00066', 'A000796'), ('00068', 'A000959'), ('00069', 'A000961'), ('00070', 'A000984'), ('00071', 'A001003'), ('00072', 'A001006'), ('00073', 'A001034'), ('00074', 'A001037'), ('00075', 'A001045'), ('00076', 'A001055'), ('00078', 'A001065'), ('00079', 'A001097'), ('00080', 'A001113'), ('00081', 'A001147'), ('00082', 'A001157'), ('00083', 'A001190'), ('00084', 'A001221'), ('00085', 'A001222'), ('00086', 'A001227'), ('00087', 'A001285'), ('00089', 'A001349'), ('00090', 'A001358'), ('00091', 'A001405'), ('00092', 'A001462'), ('00093', 'A001481'), ('00094', 'A001511'), ('00096', 'A001615'), ('00098', 'A001700'), ('00099', 'A001764'), ('00101', 'A001969'), ('00102', 'A002033'), ('00103', 'A002083'), ('00104', 'A002110'), ('00105', 'A002113'), ('00107', 'A002322'), ('00108', 'A002378'), ('00109', 'A002426'), ('00110', 'A002487'), ('00111', 'A002530'), ('00112', 'A002531'), ('00113', 'A002572'), ('00115', 'A002654'), ('00116', 'A002658'), ('00117', 'A002808'), ('00118', 'A003136'), ('00119', 'A003418'), ('00120', 'A003484'), ('00121', 'A004011'), ('00122', 'A004018'), ('00123', 'A004526'), ('00124', 'A005036'), ('00125', 'A005100'), ('00126', 'A005101'), ('00127', 'A005117'), ('00128', 'A005130'), ('00129', 'A005230'), ('00131', 'A005588'), ('00132', 'A005811'), ('00134', 'A006318'), ('00135', 'A006530'), ('00136', 'A006882'), ('00137', 'A006894'), ('00138', 'A007318'), ('00139', 'A008275'), ('00140', 'A008277'), ('00141', 'A008279'), ('00142', 'A008292'), ('00143', 'A008683'), ('00144', 'A010060'), ('00145', 'A018252'), ('00146', 'A020639'), ('00147', 'A020652'), ('00148', 'A020653'), ('00149', 'A025487'), ('00150', 'A027641'), ('00151', 'A027642'), ('00152', 'A035099'), ('00153', 'A038566'), ('00154', 'A038567'), ('00155', 'A038568'), ('00156', 'A038569'), ('00157', 'A049310'), ('00159', 'A070939'), ('00160', 'A074206'), ('00161', 'A104725'), ('00162', 'A226898'), ('00163', 'A246655')] 138
0 138
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
[138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
here i am
" A005843 .. h .. a(n) = -a(n - 2) + 2*a(n - 1)",
" A000032 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000035 .. h .. a(n) = 1 - a(n - 1)",
" A000045 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000079 .. h .. a(n) = 2*a(n - 1)",
A000124: 'lin' lib a(n) = -a(n - 2) + 2*a(n - 1) + 1
" A000129 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A000225 .. h .. a(n) = 2*a(n - 1) + 1",
" A000244 .. h .. a(n) = 3*a(n - 1)",
" A000302 .. h .. a(n) = 4*a(n - 1)",
A000326:
a(n) = -a(n - 2) + 2*a(n - 1) + 3
" A001057 .. h .. a(n) = -a(n - 2) - 2*a(n - 1) + 1",
" A001333 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A001519 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A001906 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A002275 .. h .. a(n) = 10*a(n - 1) + 1",
" A005408 .. h .. a(n) = 2*n + 1",
" A005843 .. h .. a(n) = -a(n - 2) + 2*a(n - 1)",
(0, 14, 1, 11, 0, 26, ['00130_A005408.txt'], [26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00019_A000079.txt', '00030_A000129.txt', '00041_A000225.txt', '00042_A000244.txt', '00048_A000302.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00133_A005843.txt'], ['00017_A000058.txt', '00029_A000124.txt', '00039_A000217.txt', '00046_A000290.txt', '00047_A000292.txt', '00051_A000326.txt', '00052_A000330.txt', '00067_A000798.txt', '00097_A001699.txt', '00114_A002620.txt', '00158_A055512.txt'], ['00130_A005408.txt'], [])
26

(0, 14, 1, 11, 0, 26, ['00130_A005408.txt'], [26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
all files:26, sum:26, corrected sum: 26

Results: 
0
164
164
138

        0 = 0.0 % ... (id_oeis) ... successfully found equations that are identical to the recursive equations written in OEIS (hereinafter - OEIS equation)
       14 = 8.54 % ... (non_id) ... successfully found equations that are more complex than the OEIS equation 
        1 = 0.61 % ... (non_manual) ... successfully found equations that do not apply to test cases 
       11 = 6.71 % ... (fail) ... failure, no equation found. (but program finished smoothly, no runtime error)
        0 = 0.0 % ... (reconst_non_manual) ... fail in program, specifically: reconstructed oeis and wrong on test cases.
    ~~~~~~1 = 0.61 % ... (corrected_non_manual = non_manual ... reconst_non_manual) ... non_manuals taking bug in my code into the account.~~

       26 ... (id_oeis + non_id + corrected_non_manual + fail) = sum ... of all files
    
    
        0 = 0.0 % ... sequences with no ground truth -> missing jobs
        0 = 0.0 % ... sequences with false ground truth -> missing jobs
        0 = 0.0 % ... sequences with no or false ground truth -> all missing jobs by default
      164 ... all sequences in our dataset
    
      138 = 84.1 % ... runtime errors = jobs failed
      149 = 90.9 % ... all fails  <--- (look this) ---
      164 ... all considered sequences, i.e. in our dataset - ignored
    
    _______________________________________________________
    164 ... (id_oeis + non_id + corrected_non_manual + all_fails) ... under the line check if it sums up
    26 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored + jobs_fail) ... under the line check if it sums up
    
       14 = 8.54 % - official success (id_oeis + non_id)
    
       26 = avg is best ... I might be wrong ... 
    
    time complexity: from 15:42 (2023-9-13) to 15:42 (first file, first 33 files to ?, i.e. ? mins) to 
    
    
    
    ==========================================================

    \newcommand{\allSeqs}{164}
    \newcommand{\isOeis}{0}
    \newcommand{\nonId}{14}
    \newcommand{\nonMan}{1}
    \newcommand{\edFail}{11}
    \newcommand{\jobFail}{138}

    \newcommand{\LLallSeqs}{164}
    \newcommand{\LLisOeis}{0}
    \newcommand{\LLnonId}{14}
    \newcommand{\LLnonMan}{1}
    \newcommand{\LLedFail}{11}
    \newcommand{\LLjobFail}{138}

    \FPeval{\LLok}{           clip(\LLisOeis+\LLnonId)}
    \FPeval{\LLnotOeis}{      clip(\LLnonMan+\LLnonId)}
    \FPeval{\LLnotIsFound}{   clip(\LLedFail+\LLjobFail)}
    \FPeval{\LLisFound}{      clip(\LLisOeis+\LLnotOeis)}
    \FPeval{\LLallSeqsc}{     clip(\LLisFound+\LLnotIsFound)}
    
    \FPeval{\percLLIsOeis}{       round(100 * \LLisOeis/\LLallSeqs:2)}
    \FPeval{\percLLNonId}{        round(100 * \LLnonId/\LLallSeqs:2)}
    \FPeval{\percLLNonMan}{       round(100 * \LLnonMan/\LLallSeqs:2)}
    \FPeval{\percLLNotIsFound}{   round(100 * \LLnotIsFound/\LLallSeqs:2)}

    
        \begin{table}[h]
    \caption{Table describing the sicor-comb results of novel Diofantos method experiments so far.}
    \label{tab:dio.cores}
       \renewcommand{\arraystretch}{1.5} \begin{center}
    \begin{tabular}{ll|cc|c} \toprule \centering
    &  \textbf{outputed} &  & \textbf{not\_outputed} &  \\
     \textbf{identical} & \textbf{nonidentical} & \textbf{error free (ed\_fail)} 
    & \textbf{runtime error (jobs\_fail)} & $\Sigma$ \\
        \midrule
        ? (\LLisOeis) & \LLnonId  &  \LLedFail & \LLjobFail &  \LLallSeqsc \\
        \bottomrule \end{tabular} \end{center}
    \end{table}

\begin{figure}
    \centering
\Tree[.$\LLallSeqs$ [.outputed [.$\LLisOeis$ ] 
                    [.$\LLnonId$ 
                    ] ] 
               [.not\_outputed 
                    [.$\LLedFail$ ]
                    [.$\LLjobFail$ ]
                    ]] 
    \caption{Tree explaining the process of grouping sequences into disjoint bins with tangible numbers for sicor-comb.}
    \label{fig:explain_numbersLL}
\end{figure}

\begin{figure}
    \begin{tikzpicture}
    % \pie[text=legend,
        \pie[color={ipsscblue, ipsscred, ipsscorange, ipsscyellow}] 
        {   \percLLIsOeis/identical (\LLisOeis),
            \percLLNonId/ nonidentical (\LLnonId),
            % \percLLNonMan/invalid (\LLnonMan),
            \percLLNotIsFound/no output (\LLnotIsFound) 
            }
    \end{tikzpicture}

    \caption{Summary of (fresh) results with pie chart for sicor-comb.}
    \label{fig:explain_treeLL}
\end{figure}


6
first 6 bugs: ['00130_A005408.txt']
1
job bins (task_id= 0, 1, ... 34): [26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
zipped job bins (task_id= 0, 1, ... 34): [(0, 26), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0)]
check bins: 26 = 26 ?
0 26
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
first 35 non_ids: ['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00019_A000079.txt', '00030_A000129.txt', '00041_A000225.txt', '00042_A000244.txt', '00048_A000302.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00133_A005843.txt']
14
first 100 non_manuals: ['00130_A005408.txt']
first 100 ed_fails: ['00017_A000058.txt', '00029_A000124.txt', '00039_A000217.txt', '00046_A000290.txt', '00047_A000292.txt', '00051_A000326.txt', '00052_A000330.txt', '00067_A000798.txt', '00097_A001699.txt', '00114_A002620.txt', '00158_A055512.txt']
11
first 100 true configs: []
0
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00061_A000612.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
34 35
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00061_A000612.txt']
[]
['00061_A000612.txt']
