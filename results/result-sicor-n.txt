sicor-n
jobs failed (unsuccessful): ['A000001', 'A000002', 'A000005', 'A000010', 'A000014', 'A000019', 'A000029', 'A000031', 'A000032', 'A000035'] 120
ids of jobs failed (unsuccessful): [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 128, 129, 131, 132, 134, 135, 136, 137, 143, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162]
0,1,2,4,5,6,7,8,9,10,14,15,16,17,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,38,39,41,42,43,44,45,47,48,49,50,52,53,54,55,58,60,61,62,63,64,66,70,71,72,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,91,92,94,95,97,98,99,100,102,103,104,106,107,109,110,111,112,113,114,115,116,119,120,122,123,124,128,129,131,132,134,135,136,137,143,144,146,147,148,150,152,153,154,155,156,157,159,160,161,162
ids of jobs failed (unsuccessful): [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 128, 129, 131, 132, 134, 135, 136, 137, 143, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162]
[('00000', 'A000001'), ('00001', 'A000002'), ('00002', 'A000005'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00009', 'A000032'), ('00010', 'A000035')] 120
[('00000', 'A000001'), ('00001', 'A000002'), ('00002', 'A000005'), ('00004', 'A000010'), ('00005', 'A000014'), ('00006', 'A000019'), ('00007', 'A000029'), ('00008', 'A000031'), ('00009', 'A000032'), ('00010', 'A000035'), ('00014', 'A000045'), ('00015', 'A000048'), ('00016', 'A000055'), ('00017', 'A000058'), ('00019', 'A000079'), ('00020', 'A000081'), ('00021', 'A000085'), ('00022', 'A000088'), ('00024', 'A000108'), ('00025', 'A000110'), ('00026', 'A000111'), ('00027', 'A000120'), ('00029', 'A000124'), ('00030', 'A000129'), ('00031', 'A000140'), ('00032', 'A000142'), ('00033', 'A000161'), ('00034', 'A000166'), ('00035', 'A000169'), ('00036', 'A000182'), ('00038', 'A000204'), ('00039', 'A000217'), ('00041', 'A000225'), ('00042', 'A000244'), ('00043', 'A000262'), ('00044', 'A000272'), ('00045', 'A000273'), ('00047', 'A000292'), ('00048', 'A000302'), ('00049', 'A000311'), ('00050', 'A000312'), ('00052', 'A000330'), ('00053', 'A000364'), ('00054', 'A000396'), ('00055', 'A000521'), ('00058', 'A000593'), ('00060', 'A000602'), ('00061', 'A000612'), ('00062', 'A000670'), ('00063', 'A000688'), ('00064', 'A000720'), ('00066', 'A000796'), ('00070', 'A000984'), ('00071', 'A001003'), ('00072', 'A001006'), ('00074', 'A001037'), ('00075', 'A001045'), ('00076', 'A001055'), ('00077', 'A001057'), ('00078', 'A001065'), ('00079', 'A001097'), ('00080', 'A001113'), ('00081', 'A001147'), ('00083', 'A001190'), ('00084', 'A001221'), ('00085', 'A001222'), ('00086', 'A001227'), ('00087', 'A001285'), ('00088', 'A001333'), ('00089', 'A001349'), ('00091', 'A001405'), ('00092', 'A001462'), ('00094', 'A001511'), ('00095', 'A001519'), ('00097', 'A001699'), ('00098', 'A001700'), ('00099', 'A001764'), ('00100', 'A001906'), ('00102', 'A002033'), ('00103', 'A002083'), ('00104', 'A002110'), ('00106', 'A002275'), ('00107', 'A002322'), ('00109', 'A002426'), ('00110', 'A002487'), ('00111', 'A002530'), ('00112', 'A002531'), ('00113', 'A002572'), ('00114', 'A002620'), ('00115', 'A002654'), ('00116', 'A002658'), ('00119', 'A003418'), ('00120', 'A003484'), ('00122', 'A004018'), ('00123', 'A004526'), ('00124', 'A005036'), ('00128', 'A005130'), ('00129', 'A005230'), ('00131', 'A005588'), ('00132', 'A005811'), ('00134', 'A006318'), ('00135', 'A006530'), ('00136', 'A006882'), ('00137', 'A006894'), ('00143', 'A008683'), ('00144', 'A010060'), ('00146', 'A020639'), ('00147', 'A020652'), ('00148', 'A020653'), ('00150', 'A027641'), ('00152', 'A035099'), ('00153', 'A038566'), ('00154', 'A038567'), ('00155', 'A038568'), ('00156', 'A038569'), ('00157', 'A049310'), ('00159', 'A070939'), ('00160', 'A074206'), ('00161', 'A104725'), ('00162', 'A226898')] 120
0 120
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
[120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
here i am
" A002808 .. h .. a(n) = n",
" A000009 .. h .. a(n) = 2*n**3 - 204*n**2 + 6038*n",
" A000040 .. h .. a(n) = 3*n",
" A000041 .. h .. a(n) = 913*n**3 - 107066*n**2 + 3322969*n",
" A000043 .. h .. a(n) = 5*n**3 - 111*n**2 + 727*n",
" A000069 .. h .. a(n) = 2*n",
" A000105 .. h .. a(n) = 822995641*n**3 - 26710656165*n**2 + 231177910701*n",
" A000123 .. h .. a(n) = 37*n**2 - 2188*n",
" A000203 .. h .. a(n) = 2*n",
" A000219 .. h .. a(n) = 277538527519*n**3 - 35018104502248*n**2 + 1155244965796090*n",
" A000290 .. h .. a(n) = n**2",
" A000326 .. h .. a(n) = 2*n**2",
" A000578 .. h .. a(n) = n**3",
" A000583 .. h .. a(n) = 204*n**3 - 13421*n**2 + 307734*n",
" A000594 .. h .. a(n) = 174672*n**3 - 22658878*n**2 + 766950916*n",
" A000793 .. h .. a(n) = 1290*n**3 - 149297*n**2 + 4557520*n",
" A000798 .. h .. a(n) = 10576944870856*n**3 - 158559266767093*n**2 + 655043622679848*n",
" A000959 .. h .. a(n) = 4*n",
" A000961 .. h .. a(n) = n",
" A001034 .. h .. a(n) = 25*n**3 - 1597*n**2 + 34865*n",
" A001157 .. h .. a(n) = n**2",
" A001358 .. h .. a(n) = 3*n",
" A001481 .. h .. a(n) = 2*n",
" A001615 .. h .. a(n) = 2*n",
" A001969 .. h .. a(n) = 2*n",
" A002113 .. h .. a(n) = 7*n",
" A002378 .. h .. a(n) = n**2 + n",
" A002808 .. h .. a(n) = n",
" A003136 .. h .. a(n) = 2*n",
" A004011 .. h .. a(n) = 21*n",
" A005100 .. h .. a(n) = n",
" A005101 .. h .. a(n) = 4*n",
" A005117 .. h .. a(n) = 2*n",
" A005408 .. h .. a(n) = 2*n",
" A005843 .. h .. a(n) = 2*n",
" A007318 .. h .. a(n) = 12*n",
" A008275 .. h .. a(n) = 33*n**3 - 4446*n**2 + 151957*n",
" A008277 .. h .. a(n) = 103*n**3 - 11869*n**2 + 357236*n",
" A008279 .. h .. a(n) = 1489*n**3 - 177354*n**2 + 5588430*n",
" A008292 .. h .. a(n) = 64793*n**3 - 7929810*n**2 + 253872396*n",
" A018252 .. h .. a(n) = n",
" A025487 .. h .. a(n) = -n**2 + 30*n",
" A027642 .. h .. a(n) = -101*n**3 + 13800*n**2 - 421783*n",
" A055512 .. h .. a(n) = 5739441049*n**3 - 85942537084*n**2 + 354705008054*n",
" A246655 .. h .. a(n) = 2*n",
(0, 44, 0, 0, 0, 44, [], [44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ['00003_A000009.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00018_A000069.txt', '00023_A000105.txt', '00028_A000123.txt', '00037_A000203.txt', '00040_A000219.txt', '00046_A000290.txt', '00051_A000326.txt', '00056_A000578.txt', '00057_A000583.txt', '00059_A000594.txt', '00065_A000793.txt', '00067_A000798.txt', '00068_A000959.txt', '00069_A000961.txt', '00073_A001034.txt', '00082_A001157.txt', '00090_A001358.txt', '00093_A001481.txt', '00096_A001615.txt', '00101_A001969.txt', '00105_A002113.txt', '00108_A002378.txt', '00117_A002808.txt', '00118_A003136.txt', '00121_A004011.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt', '00130_A005408.txt', '00133_A005843.txt', '00138_A007318.txt', '00139_A008275.txt', '00140_A008277.txt', '00141_A008279.txt', '00142_A008292.txt', '00145_A018252.txt', '00149_A025487.txt', '00151_A027642.txt', '00158_A055512.txt', '00163_A246655.txt'], [], [], [])
44

(0, 44, 0, 0, 0, 44, [], [44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
all files:44, sum:44, corrected sum: 44

Results: 
0
164
164
120

        0 = 0.0 % ... (id_oeis) ... successfully found equations that are identical to the recursive equations written in OEIS (hereinafter - OEIS equation)
       44 = 26.8 % ... (non_id) ... successfully found equations that are more complex than the OEIS equation 
        0 = 0.0 % ... (non_manual) ... successfully found equations that do not apply to test cases 
        0 = 0.0 % ... (fail) ... failure, no equation found. (but program finished smoothly, no runtime error)
        0 = 0.0 % ... (reconst_non_manual) ... fail in program, specifically: reconstructed oeis and wrong on test cases.
    ~~~~~~0 = 0.0 % ... (corrected_non_manual = non_manual ... reconst_non_manual) ... non_manuals taking bug in my code into the account.~~

       44 ... (id_oeis + non_id + corrected_non_manual + fail) = sum ... of all files
    
    
        0 = 0.0 % ... sequences with no ground truth -> missing jobs
        0 = 0.0 % ... sequences with false ground truth -> missing jobs
        0 = 0.0 % ... sequences with no or false ground truth -> all missing jobs by default
      164 ... all sequences in our dataset
    
      120 = 73.2 % ... runtime errors = jobs failed
      120 = 73.2 % ... all fails  <--- (look this) ---
      164 ... all considered sequences, i.e. in our dataset - ignored
    
    _______________________________________________________
    164 ... (id_oeis + non_id + corrected_non_manual + all_fails) ... under the line check if it sums up
    44 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored + jobs_fail) ... under the line check if it sums up
    
       44 = 26.8 % - official success (id_oeis + non_id)
    
       44 = avg is best ... I might be wrong ... 
    
    time complexity: from 17:20 (2023-9-7) to ?
    
    
    
    ==========================================================

    \newcommand{\allSeqs}{164}
    \newcommand{\isOeis}{0}
    \newcommand{\nonId}{44}
    \newcommand{\nonMan}{0}
    \newcommand{\edFail}{0}
    \newcommand{\jobFail}{120}

    \newcommand{\MMallSeqs}{164}
    \newcommand{\MMisOeis}{0}
    \newcommand{\MMnonId}{44}
    \newcommand{\MMnonMan}{0}
    \newcommand{\MMedFail}{0}
    \newcommand{\MMjobFail}{120}

    \FPeval{\MMok}{           clip(\MMisOeis+\MMnonId)}
    \FPeval{\MMnotOeis}{      clip(\MMnonMan+\MMnonId)}
    \FPeval{\MMnotIsFound}{   clip(\MMedFail+\MMjobFail)}
    \FPeval{\MMisFound}{      clip(\MMisOeis+\MMnotOeis)}
    \FPeval{\MMallSeqsc}{     clip(\MMisFound+\MMnotIsFound)}
    
    \FPeval{\percMMIsOeis}{       round(100 * \MMisOeis/\MMallSeqs:2)}
    \FPeval{\percMMNonId}{        round(100 * \MMnonId/\MMallSeqs:2)}
    \FPeval{\percMMNonMan}{       round(100 * \MMnonMan/\MMallSeqs:2)}
    \FPeval{\percMMNotIsFound}{   round(100 * \MMnotIsFound/\MMallSeqs:2)}

    
        \begin{table}[h]
    \caption{Table describing the sicor-n results of novel Diofantos method experiments so far.}
    \label{tab:dio.cores}
       \renewcommand{\arraystretch}{1.5} \begin{center}
    \begin{tabular}{ll|cc|c} \toprule \centering
    &  \textbf{outputed} &  & \textbf{not\_outputed} &  \\
     \textbf{identical} & \textbf{nonidentical} & \textbf{error free (ed\_fail)} 
    & \textbf{runtime error (jobs\_fail)} & $\Sigma$ \\
        \midrule
        ? (\MMisOeis) & \MMnonId  &  \MMedFail & \MMjobFail &  \MMallSeqsc \\
        \bottomrule \end{tabular} \end{center}
    \end{table}

\begin{figure}
    \centering
\Tree[.$\MMallSeqs$ [.outputed [.$\MMisOeis$ ] 
                    [.$\MMnonId$ 
                    ] ] 
               [.not\_outputed 
                    [.$\MMedFail$ ]
                    [.$\MMjobFail$ ]
                    ]] 
    \caption{Tree explaining the process of grouping sequences into disjoint bins with tangible numbers for sicor-n.}
    \label{fig:explain_numbersMM}
\end{figure}

\begin{figure}
    \begin{tikzpicture}
    % \pie[text=legend,
        \pie[color={ipsscblue, ipsscred, ipsscorange, ipsscyellow}] 
        {   \percMMIsOeis/identical (\MMisOeis),
            \percMMNonId/ nonidentical (\MMnonId),
            % \percMMNonMan/invalid (\MMnonMan),
            \percMMNotIsFound/no output (\MMnotIsFound) 
            }
    \end{tikzpicture}

    \caption{Summary of (fresh) results with pie chart for sicor-n.}
    \label{fig:explain_treeMM}
\end{figure}


6
first 6 bugs: []
0
job bins (task_id= 0, 1, ... 34): [44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
zipped job bins (task_id= 0, 1, ... 34): [(0, 44), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0)]
check bins: 44 = 44 ?
0 44
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
first 35 non_ids: ['00003_A000009.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00018_A000069.txt', '00023_A000105.txt', '00028_A000123.txt', '00037_A000203.txt', '00040_A000219.txt', '00046_A000290.txt', '00051_A000326.txt', '00056_A000578.txt', '00057_A000583.txt', '00059_A000594.txt', '00065_A000793.txt', '00067_A000798.txt', '00068_A000959.txt', '00069_A000961.txt', '00073_A001034.txt', '00082_A001157.txt', '00090_A001358.txt', '00093_A001481.txt', '00096_A001615.txt', '00101_A001969.txt', '00105_A002113.txt', '00108_A002378.txt', '00117_A002808.txt', '00118_A003136.txt', '00121_A004011.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt', '00130_A005408.txt', '00133_A005843.txt', '00138_A007318.txt']
44
first 100 non_manuals: []
first 100 ed_fails: []
0
first 100 true configs: []
0
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00061_A000612.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
34 35
['00009_A000032.txt', '00010_A000035.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00029_A000124.txt', '00030_A000129.txt', '00038_A000204.txt', '00039_A000217.txt', '00041_A000225.txt', '00042_A000244.txt', '00046_A000290.txt', '00047_A000292.txt', '00048_A000302.txt', '00051_A000326.txt', '00052_A000330.txt', '00056_A000578.txt', '00057_A000583.txt', '00067_A000798.txt', '00075_A001045.txt', '00077_A001057.txt', '00088_A001333.txt', '00095_A001519.txt', '00097_A001699.txt', '00100_A001906.txt', '00106_A002275.txt', '00108_A002378.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt', '00158_A055512.txt']
['00061_A000612.txt']
[]
['00061_A000612.txt']
