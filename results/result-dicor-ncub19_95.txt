dicor-ncub19_95
jobs failed (unsuccessful): ['A000088', 'A000110', 'A000111', 'A000140', 'A000166', 'A000169', 'A000182', 'A000262', 'A000272', 'A000273'] 28
ids of jobs failed (unsuccessful): [22, 25, 26, 31, 34, 35, 36, 43, 44, 45, 49, 50, 53, 54, 55, 61, 62, 67, 77, 81, 89, 97, 104, 116, 128, 131, 137, 158]
22,25,26,31,34,35,36,43,44,45,49,50,53,54,55,61,62,67,77,81,89,97,104,116,128,131,137,158
ids of jobs failed (unsuccessful): [22, 25, 26, 31, 34, 35, 36, 43, 44, 45, 49, 50, 53, 54, 55, 61, 62, 67, 77, 81, 89, 97, 104, 116, 128, 131, 137, 158]
[('00022', 'A000088'), ('00025', 'A000110'), ('00026', 'A000111'), ('00031', 'A000140'), ('00034', 'A000166'), ('00035', 'A000169'), ('00036', 'A000182'), ('00043', 'A000262'), ('00044', 'A000272'), ('00045', 'A000273')] 28
[('00022', 'A000088'), ('00025', 'A000110'), ('00026', 'A000111'), ('00031', 'A000140'), ('00034', 'A000166'), ('00035', 'A000169'), ('00036', 'A000182'), ('00043', 'A000262'), ('00044', 'A000272'), ('00045', 'A000273'), ('00049', 'A000311'), ('00050', 'A000312'), ('00053', 'A000364'), ('00054', 'A000396'), ('00055', 'A000521'), ('00061', 'A000612'), ('00062', 'A000670'), ('00067', 'A000798'), ('00077', 'A001057'), ('00081', 'A001147'), ('00089', 'A001349'), ('00097', 'A001699'), ('00104', 'A002110'), ('00116', 'A002658'), ('00128', 'A005130'), ('00131', 'A005588'), ('00137', 'A006894'), ('00158', 'A055512')] 28
0 28
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
[28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
here i am
" A000032 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000035 .. h .. a(n) = a(n - 2)**2",
" A000045 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000058 .. h .. a(n) = -a(n - 2)**2 + a(n - 2) + a(n - 1)**2",
" A000079 .. h .. a(n) = 2*a(n - 1)",
" A000129 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A000204 .. h .. a(n) = a(n - 2) + a(n - 1)",
" A000225 .. h .. a(n) = -2*a(n - 2) + 3*a(n - 1)",
" A000244 .. h .. a(n) = 3*a(n - 1)",
" A000302 .. h .. a(n) = 4*a(n - 1)",
" A000326 .. h .. a(n) = a(n - 3) - 3*a(n - 2) + 3*a(n - 1)",
" A000583 .. h .. a(n) = a(n - 5) - 5*a(n - 4) + 10*a(n - 3) - 10*a(n - 2) + 5*a(n - 1)",
" A001045 .. h .. a(n) = 2*a(n - 2) + a(n - 1)",
" A001333 .. h .. a(n) = a(n - 2) + 2*a(n - 1)",
" A001519 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A001906 .. h .. a(n) = -a(n - 2) + 3*a(n - 1)",
" A002275 .. h .. a(n) = -10*a(n - 2) + 11*a(n - 1)",
" A002530 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002531 .. h .. a(n) = -a(n - 4) + 4*a(n - 2)",
" A002620 .. h .. a(n) = a(n - 8) - a(n - 7) - a(n - 5) + a(n - 3) + a(n - 1)",
" A004526 .. h .. a(n) = -a(n - 3) + a(n - 2) + a(n - 1)",
" A005408 .. h .. a(n) = -a(n - 2) + 2*a(n - 1)",
" A005843 .. h .. a(n) = -a(n - 3) + a(n - 2) + a(n - 1)",
(0, 1, 22, 113, 0, 136, ['00009_A000032.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00030_A000129.txt', '00038_A000204.txt', '00041_A000225.txt', '00042_A000244.txt', '00048_A000302.txt', '00051_A000326.txt', '00057_A000583.txt', '00075_A001045.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt'], [136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ['00010_A000035.txt'], ['00000_A000001.txt', '00001_A000002.txt', '00002_A000005.txt', '00003_A000009.txt', '00004_A000010.txt', '00005_A000014.txt', '00006_A000019.txt', '00007_A000029.txt', '00008_A000031.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00015_A000048.txt', '00016_A000055.txt', '00018_A000069.txt', '00020_A000081.txt', '00021_A000085.txt', '00023_A000105.txt', '00024_A000108.txt', '00027_A000120.txt', '00028_A000123.txt', '00029_A000124.txt', '00032_A000142.txt', '00033_A000161.txt', '00037_A000203.txt', '00039_A000217.txt', '00040_A000219.txt', '00046_A000290.txt', '00047_A000292.txt', '00052_A000330.txt', '00056_A000578.txt', '00058_A000593.txt', '00059_A000594.txt', '00060_A000602.txt', '00063_A000688.txt', '00064_A000720.txt', '00065_A000793.txt', '00066_A000796.txt', '00068_A000959.txt', '00069_A000961.txt', '00070_A000984.txt', '00071_A001003.txt', '00072_A001006.txt', '00073_A001034.txt', '00074_A001037.txt', '00076_A001055.txt', '00078_A001065.txt', '00079_A001097.txt', '00080_A001113.txt', '00082_A001157.txt', '00083_A001190.txt', '00084_A001221.txt', '00085_A001222.txt', '00086_A001227.txt', '00087_A001285.txt', '00090_A001358.txt', '00091_A001405.txt', '00092_A001462.txt', '00093_A001481.txt', '00094_A001511.txt', '00096_A001615.txt', '00098_A001700.txt', '00099_A001764.txt', '00101_A001969.txt', '00102_A002033.txt', '00103_A002083.txt', '00105_A002113.txt', '00107_A002322.txt', '00108_A002378.txt', '00109_A002426.txt', '00110_A002487.txt', '00113_A002572.txt', '00115_A002654.txt', '00117_A002808.txt', '00118_A003136.txt', '00119_A003418.txt', '00120_A003484.txt', '00121_A004011.txt', '00122_A004018.txt', '00124_A005036.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt', '00129_A005230.txt', '00132_A005811.txt', '00134_A006318.txt', '00135_A006530.txt', '00136_A006882.txt', '00138_A007318.txt', '00139_A008275.txt', '00140_A008277.txt', '00141_A008279.txt', '00142_A008292.txt', '00143_A008683.txt', '00144_A010060.txt', '00145_A018252.txt', '00146_A020639.txt', '00147_A020652.txt', '00148_A020653.txt', '00149_A025487.txt', '00150_A027641.txt', '00151_A027642.txt', '00152_A035099.txt', '00153_A038566.txt', '00154_A038567.txt', '00155_A038568.txt', '00156_A038569.txt', '00157_A049310.txt', '00159_A070939.txt', '00160_A074206.txt', '00161_A104725.txt', '00162_A226898.txt', '00163_A246655.txt'], ['00009_A000032.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00030_A000129.txt', '00038_A000204.txt', '00041_A000225.txt', '00042_A000244.txt', '00048_A000302.txt', '00051_A000326.txt', '00057_A000583.txt', '00075_A001045.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt'], [])
136

(0, 1, 22, 113, 0, 136, ['00009_A000032.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A0000
all files:136, sum:136, corrected sum: 136

Results:
0
164
164
28

        0 = 0.0 % ... (id_oeis) ... successfully found equations that are identical to the recursive equations written in OEIS (hereinafter - OEIS equation)
        1 = 0.61 % ... (non_id) ... successfully found equations that are more complex than the OEIS equation
       22 = 13.4 % ... (non_manual) ... successfully found equations that do not apply to test cases
      113 = 68.9 % ... (fail) ... failure, no equation found. (but program finished smoothly, no runtime error)
        0 = 0.0 % ... (reconst_non_manual) ... fail in program, specifically: reconstructed oeis and wrong on test cases.
    ~~~~~22 = 13.4 % ... (corrected_non_manual = non_manual ... reconst_non_manual) ... non_manuals taking bug in my code into the account.~~

      136 ... (id_oeis + non_id + corrected_non_manual + fail) = sum ... of all files


        0 = 0.0 % ... sequences with no ground truth -> missing jobs
        0 = 0.0 % ... sequences with false ground truth -> missing jobs
        0 = 0.0 % ... sequences with no or false ground truth -> all missing jobs by default
      164 ... all sequences in our dataset

       28 = 17.1 % ... runtime errors = jobs failed
      141 = 86.0 % ... all fails  <--- (look this) ---
      164 ... all considered sequences, i.e. in our dataset - ignored

    _______________________________________________________
    164 ... (id_oeis + non_id + corrected_non_manual + all_fails) ... under the line check if it sums up
    136 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored) ... under the line check if it sums up
    164 ... (id_oeis + non_id + corrected_non_manual + ed_fails + ignored + jobs_fail) ... under the line check if it sums up

        1 = 0.61 % - official success (id_oeis + non_id)

      136 = avg is best ... I might be wrong ...

    time complexity: from 5.9. 17h .. to more than 6.9. 8:25 ... to ?, i.e. >half day



    ==========================================================

    \newcommand{\allSeqs}{164}
    \newcommand{\isOeis}{0}
    \newcommand{\nonId}{1}
    \newcommand{\nonMan}{22}
    \newcommand{\edFail}{113}
    \newcommand{\jobFail}{28}

    \newcommand{\ZZallSeqs}{164}
    \newcommand{\ZZisOeis}{0}
    \newcommand{\ZZnonId}{1}
    \newcommand{\ZZnonMan}{22}
    \newcommand{\ZZedFail}{113}
    \newcommand{\ZZjobFail}{28}

    \FPeval{\ZZok}{           clip(\ZZisOeis+\ZZnonId)}
    \FPeval{\ZZnotOeis}{      clip(\ZZnonMan+\ZZnonId)}
    \FPeval{\ZZnotIsFound}{   clip(\ZZedFail+\ZZjobFail)}
    \FPeval{\ZZisFound}{      clip(\ZZisOeis+\ZZnotOeis)}
    \FPeval{\ZZallSeqsc}{     clip(\ZZisFound+\ZZnotIsFound)}

    \FPeval{\percZZIsOeis}{       round(100 * \ZZisOeis/\ZZallSeqs:2)}
    \FPeval{\percZZNonId}{        round(100 * \ZZnonId/\ZZallSeqs:2)}
    \FPeval{\percZZNonMan}{       round(100 * \ZZnonMan/\ZZallSeqs:2)}
    \FPeval{\percZZNotIsFound}{   round(100 * \ZZnotIsFound/\ZZallSeqs:2)}


    \begin{table}[h]
    \caption{Table describing the (new/fresh) results of novel method experiments so far.}
    \label{tab:results_numbersZZ}
       \renewcommand{\arraystretch}{1.5} \begin{center}
       \begin{tabular}{c|rrcc|c} \toprule \centering
    &                   \textbf{is\_found} &  & \textbf{not\_is\_found} &  \\
    \textbf{Validation} & \textbf{identical} & \textbf{nonidentical} & \textbf{none (ed\_fail)}
    & \textbf{error (jobs\_fail)} & $\Sigma$  \\
        \midrule
        OK       & \ZZisOeis & \ZZnonId     &  $\times$ & $\times$ & \ZZok \\
        not - OK & 0 & \ZZnonMan &  $\times$ & $\times$   \\
        \midrule
        $\Sigma$ & \ZZisOeis  &  \ZZnotOeis  &  \ZZedFail
        & \ZZjobFail
        &  \ZZallSeqsc \\
        \bottomrule \end{tabular} \end{center}
    \end{table}


\begin{figure}
    \centering
\Tree[.$\ZZallSeqs$ [.is\_found [.$\ZZisOeis$ ]
               [.$\ZZnotOeis$
                    [.$\ZZnonId$ ]
                    [.$\ZZnonMan$ ]] ]
               [.not\_is\_found
                    [.$\ZZedFail$ ]
                    [.$\ZZjobFail$ ]
                    ]]
    \caption{Tree explaining the process of grouping sequences into disjoint bins with tangible numbers.}
    \label{fig:explain_numbersZZ}
\end{figure}

\begin{figure}
    \begin{tikzpicture}
    % \pie[text=legend,
        \pie[color={ipsscblue, ipsscred, ipsscorange, ipsscyellow}]
        {   \percZZIsOeis/identical (\ZZisOeis),
            \percZZNonId/ \begin{tabular}{c} valid for   first \\ test terms  (\ZZnonId) \end{tabular} ,
            \percZZNonMan/invalid (\ZZnonMan),
            \percZZNotIsFound/no output (\ZZnotIsFound)
            }
    \end{tikzpicture}

    \caption{Summary of (fresh) results with pie chart.}
    \label{fig:explain_treeZZ}
\end{figure}


6
first 6 bugs: ['00009_A000032.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00030_A000129.txt', '00038_A000204.txt']
22
job bins (task_id= 0, 1, ... 34): [136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
zipped job bins (task_id= 0, 1, ... 34): [(0, 136), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0)]
check bins: 136 = 136 ?
0 136
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
first 35 non_ids: ['00010_A000035.txt']
1
first 100 non_manuals: ['00009_A000032.txt', '00014_A000045.txt', '00017_A000058.txt', '00019_A000079.txt', '00030_A000129.txt', '00038_A000204.txt', '00041_A000225.txt', '00042_A000244.txt', '00048_A000302.txt', '00051_A000326.txt', '00057_A000583.txt', '00075_A001045.txt', '00088_A001333.txt', '00095_A001519.txt', '00100_A001906.txt', '00106_A002275.txt', '00111_A002530.txt', '00112_A002531.txt', '00114_A002620.txt', '00123_A004526.txt', '00130_A005408.txt', '00133_A005843.txt']
first 100 ed_fails: ['00000_A000001.txt', '00001_A000002.txt', '00002_A000005.txt', '00003_A000009.txt', '00004_A000010.txt', '00005_A000014.txt', '00006_A000019.txt', '00007_A000029.txt', '00008_A000031.txt', '00011_A000040.txt', '00012_A000041.txt', '00013_A000043.txt', '00015_A000048.txt', '00016_A000055.txt', '00018_A000069.txt', '00020_A000081.txt', '00021_A000085.txt', '00023_A000105.txt', '00024_A000108.txt', '00027_A000120.txt', '00028_A000123.txt', '00029_A000124.txt', '00032_A000142.txt', '00033_A000161.txt', '00037_A000203.txt', '00039_A000217.txt', '00040_A000219.txt', '00046_A000290.txt', '00047_A000292.txt', '00052_A000330.txt', '00056_A000578.txt', '00058_A000593.txt', '00059_A000594.txt', '00060_A000602.txt', '00063_A000688.txt', '00064_A000720.txt', '00065_A000793.txt', '00066_A000796.txt', '00068_A000959.txt', '00069_A000961.txt', '00070_A000984.txt', '00071_A001003.txt', '00072_A001006.txt', '00073_A001034.txt', '00074_A001037.txt', '00076_A001055.txt', '00078_A001065.txt', '00079_A001097.txt', '00080_A001113.txt', '00082_A001157.txt', '00083_A001190.txt', '00084_A001221.txt', '00085_A001222.txt', '00086_A001227.txt', '00087_A001285.txt', '00090_A001358.txt', '00091_A001405.txt', '00092_A001462.txt', '00093_A001481.txt', '00094_A001511.txt', '00096_A001615.txt', '00098_A001700.txt', '00099_A001764.txt', '00101_A001969.txt', '00102_A002033.txt', '00103_A002083.txt', '00105_A002113.txt', '00107_A002322.txt', '00108_A002378.txt', '00109_A002426.txt', '00110_A002487.txt', '00113_A002572.txt', '00115_A002654.txt', '00117_A002808.txt', '00118_A003136.txt', '00119_A003418.txt', '00120_A003484.txt', '00121_A004011.txt', '00122_A004018.txt', '00124_A005036.txt', '00125_A005100.txt', '00126_A005101.txt', '00127_A005117.txt', '00129_A005230.txt', '00132_A005811.txt', '00134_A006318.txt', '00135_A006530.txt', '00136_A006882.txt', '00138_A007318.txt', '00139_A008275.txt', '00140_A008277.txt', '00141_A008279.txt', '00142_A008292.txt', '00143_A008683.txt', '00144_A010060.txt', '00145_A018252.txt', '00146_A020639.txt', '00147_A020652.txt', '00148_A020653.txt', '00149_A025487.txt']
113
first 100 true configs: []
0
